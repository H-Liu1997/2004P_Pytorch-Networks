start creating config files...
update config files success
Computational complexity:       16.0 GMac
Number of parameters:           21.03 M 
no checkpoints
[0][0/750]	Loss:5.35249	Lr:0.000002	Data:1783ms	Train:0915ms	Mem:4.10Gb	Prec@1:0.0000
[0][300/750]	Loss:5.45040	Lr:0.000202	Data:0017ms	Train:0339ms	Mem:4.10Gb	Prec@1:0.0025
[0][600/750]	Loss:5.24909	Lr:0.000402	Data:0003ms	Train:0293ms	Mem:4.10Gb	Prec@1:0.0046
[0][0/725]	Loss:5.27143	Lr:0.000000	Data:1584ms	Train:0014ms	Mem:4.10Gb	Prec@1:0.0000
[0][300/725]	Loss:5.07983	Lr:0.000000	Data:0065ms	Train:0128ms	Mem:4.10Gb	Prec@1:0.0150
[0][600/725]	Loss:5.16567	Lr:0.000000	Data:0093ms	Train:0046ms	Mem:4.10Gb	Prec@1:0.0123
Train Prec@1:0.0052	Val Prec@1:0.0104
BestV Prec@1:0.0104	Best Epoch:0
[1][0/750]	Loss:5.28810	Lr:0.000502	Data:1919ms	Train:0394ms	Mem:4.10Gb	Prec@1:0.0000
[1][300/750]	Loss:5.22791	Lr:0.000702	Data:0004ms	Train:0245ms	Mem:4.10Gb	Prec@1:0.0129
[1][600/750]	Loss:5.07087	Lr:0.000902	Data:0023ms	Train:0256ms	Mem:4.10Gb	Prec@1:0.0146
[1][0/725]	Loss:4.01378	Lr:0.000000	Data:2074ms	Train:0013ms	Mem:4.10Gb	Prec@1:0.0000
[1][300/725]	Loss:4.18726	Lr:0.000000	Data:0101ms	Train:0063ms	Mem:4.10Gb	Prec@1:0.0365
[1][600/725]	Loss:4.54840	Lr:0.000000	Data:0050ms	Train:0125ms	Mem:4.10Gb	Prec@1:0.0412
Train Prec@1:0.0169	Val Prec@1:0.0495
BestV Prec@1:0.0495	Best Epoch:1
[2][0/750]	Loss:4.85219	Lr:0.001000	Data:1858ms	Train:0340ms	Mem:4.12Gb	Prec@1:0.0000
[2][300/750]	Loss:4.34737	Lr:0.001000	Data:0021ms	Train:0293ms	Mem:4.12Gb	Prec@1:0.0569
[2][600/750]	Loss:4.28743	Lr:0.000999	Data:0003ms	Train:0252ms	Mem:4.12Gb	Prec@1:0.0695
[2][0/725]	Loss:2.39442	Lr:0.000000	Data:2191ms	Train:0039ms	Mem:4.12Gb	Prec@1:0.3750
[2][300/725]	Loss:3.68304	Lr:0.000000	Data:0049ms	Train:0155ms	Mem:4.12Gb	Prec@1:0.2259
[2][600/725]	Loss:3.47259	Lr:0.000000	Data:0059ms	Train:0085ms	Mem:4.12Gb	Prec@1:0.2171
Train Prec@1:0.0802	Val Prec@1:0.2062
BestV Prec@1:0.2062	Best Epoch:2
[3][0/750]	Loss:3.93550	Lr:0.000998	Data:2201ms	Train:0405ms	Mem:4.12Gb	Prec@1:0.2500
[3][300/750]	Loss:3.74573	Lr:0.000997	Data:0026ms	Train:0268ms	Mem:4.12Gb	Prec@1:0.1649
[3][600/750]	Loss:4.32306	Lr:0.000995	Data:0003ms	Train:0244ms	Mem:4.12Gb	Prec@1:0.1755
[3][0/725]	Loss:3.21484	Lr:0.000000	Data:1868ms	Train:0014ms	Mem:4.12Gb	Prec@1:0.2500
[3][300/725]	Loss:2.00651	Lr:0.000000	Data:0079ms	Train:0155ms	Mem:4.12Gb	Prec@1:0.3405
[3][600/725]	Loss:3.51844	Lr:0.000000	Data:0085ms	Train:0060ms	Mem:4.12Gb	Prec@1:0.3480
Train Prec@1:0.1825	Val Prec@1:0.3454
BestV Prec@1:0.3454	Best Epoch:3
[4][0/750]	Loss:3.75752	Lr:0.000994	Data:1988ms	Train:0340ms	Mem:4.12Gb	Prec@1:0.2500
[4][300/750]	Loss:3.13733	Lr:0.000991	Data:0011ms	Train:0268ms	Mem:4.12Gb	Prec@1:0.2587
[4][600/750]	Loss:3.53203	Lr:0.000988	Data:0012ms	Train:0268ms	Mem:4.12Gb	Prec@1:0.2714
[4][0/725]	Loss:2.23737	Lr:0.000000	Data:2252ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.5000
[4][300/725]	Loss:1.50913	Lr:0.000000	Data:0036ms	Train:0132ms	Mem:4.12Gb	Prec@1:0.4813
[4][600/725]	Loss:2.62169	Lr:0.000000	Data:0056ms	Train:0075ms	Mem:4.12Gb	Prec@1:0.4655
Train Prec@1:0.2776	Val Prec@1:0.4679
BestV Prec@1:0.4679	Best Epoch:4
[5][0/750]	Loss:3.47753	Lr:0.000986	Data:1881ms	Train:0335ms	Mem:4.12Gb	Prec@1:0.2500
[5][300/750]	Loss:2.71843	Lr:0.000982	Data:0039ms	Train:0251ms	Mem:4.12Gb	Prec@1:0.3401
[5][600/750]	Loss:2.58292	Lr:0.000978	Data:0003ms	Train:0272ms	Mem:4.12Gb	Prec@1:0.3542
[5][0/725]	Loss:2.30287	Lr:0.000000	Data:2067ms	Train:0014ms	Mem:4.12Gb	Prec@1:0.3750
[5][300/725]	Loss:0.37482	Lr:0.000000	Data:0084ms	Train:0042ms	Mem:4.12Gb	Prec@1:0.5590
[5][600/725]	Loss:2.36867	Lr:0.000000	Data:0050ms	Train:0122ms	Mem:4.12Gb	Prec@1:0.5237
Train Prec@1:0.3602	Val Prec@1:0.5250
BestV Prec@1:0.5250	Best Epoch:5
[6][0/750]	Loss:2.64549	Lr:0.000976	Data:1733ms	Train:0352ms	Mem:4.12Gb	Prec@1:0.1250
[6][300/750]	Loss:1.80455	Lr:0.000970	Data:0011ms	Train:0277ms	Mem:4.12Gb	Prec@1:0.4360
[6][600/750]	Loss:2.18742	Lr:0.000965	Data:0017ms	Train:0256ms	Mem:4.12Gb	Prec@1:0.4351
[6][0/725]	Loss:2.13811	Lr:0.000000	Data:1517ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.3750
[6][300/725]	Loss:0.31349	Lr:0.000000	Data:0075ms	Train:0059ms	Mem:4.12Gb	Prec@1:0.6163
[6][600/725]	Loss:2.12784	Lr:0.000000	Data:0050ms	Train:0060ms	Mem:4.12Gb	Prec@1:0.5980
Train Prec@1:0.4394	Val Prec@1:0.6089
BestV Prec@1:0.6089	Best Epoch:6
[7][0/750]	Loss:2.93123	Lr:0.000962	Data:1587ms	Train:0322ms	Mem:4.12Gb	Prec@1:0.2500
[7][300/750]	Loss:2.06938	Lr:0.000956	Data:0011ms	Train:0318ms	Mem:4.12Gb	Prec@1:0.4838
[7][600/750]	Loss:1.84293	Lr:0.000949	Data:0011ms	Train:0272ms	Mem:4.12Gb	Prec@1:0.4936
[7][0/725]	Loss:0.76515	Lr:0.000000	Data:1788ms	Train:0025ms	Mem:4.12Gb	Prec@1:0.8750
[7][300/725]	Loss:0.24443	Lr:0.000000	Data:0066ms	Train:0120ms	Mem:4.12Gb	Prec@1:0.6603
[7][600/725]	Loss:1.11723	Lr:0.000000	Data:0091ms	Train:0068ms	Mem:4.12Gb	Prec@1:0.6504
Train Prec@1:0.4965	Val Prec@1:0.6617
BestV Prec@1:0.6617	Best Epoch:7
[8][0/750]	Loss:1.18227	Lr:0.000945	Data:2219ms	Train:0410ms	Mem:4.12Gb	Prec@1:0.8750
[8][300/750]	Loss:2.36137	Lr:0.000938	Data:0011ms	Train:0269ms	Mem:4.12Gb	Prec@1:0.5253
[8][600/750]	Loss:1.46870	Lr:0.000930	Data:0027ms	Train:0310ms	Mem:4.12Gb	Prec@1:0.5368
[8][0/725]	Loss:1.49822	Lr:0.000000	Data:1913ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.5000
[8][300/725]	Loss:0.09528	Lr:0.000000	Data:0061ms	Train:0039ms	Mem:4.12Gb	Prec@1:0.7193
[8][600/725]	Loss:1.47282	Lr:0.000000	Data:0059ms	Train:0070ms	Mem:4.12Gb	Prec@1:0.6876
Train Prec@1:0.5374	Val Prec@1:0.6916
BestV Prec@1:0.6916	Best Epoch:8
[9][0/750]	Loss:2.20640	Lr:0.000926	Data:2104ms	Train:0397ms	Mem:4.12Gb	Prec@1:0.3750
[9][300/750]	Loss:1.82544	Lr:0.000918	Data:0011ms	Train:0279ms	Mem:4.12Gb	Prec@1:0.5835
[9][600/750]	Loss:2.08922	Lr:0.000909	Data:0002ms	Train:0258ms	Mem:4.12Gb	Prec@1:0.5865
[9][0/725]	Loss:1.32590	Lr:0.000000	Data:1522ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.5000
[9][300/725]	Loss:0.07237	Lr:0.000000	Data:0031ms	Train:0058ms	Mem:4.12Gb	Prec@1:0.7097
[9][600/725]	Loss:1.13639	Lr:0.000000	Data:0057ms	Train:0144ms	Mem:4.12Gb	Prec@1:0.6936
Train Prec@1:0.5898	Val Prec@1:0.7045
BestV Prec@1:0.7045	Best Epoch:9
[10][0/750]	Loss:2.77746	Lr:0.000904	Data:2117ms	Train:0363ms	Mem:4.12Gb	Prec@1:0.3750
[10][300/750]	Loss:1.92632	Lr:0.000895	Data:0012ms	Train:0277ms	Mem:4.12Gb	Prec@1:0.6096
[10][600/750]	Loss:1.25940	Lr:0.000885	Data:0015ms	Train:0255ms	Mem:4.12Gb	Prec@1:0.6148
[10][0/725]	Loss:0.88324	Lr:0.000000	Data:2151ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.7500
[10][300/725]	Loss:0.03261	Lr:0.000000	Data:0108ms	Train:0046ms	Mem:4.12Gb	Prec@1:0.7313
[10][600/725]	Loss:1.03759	Lr:0.000000	Data:0044ms	Train:0089ms	Mem:4.12Gb	Prec@1:0.7255
Train Prec@1:0.6139	Val Prec@1:0.7404
BestV Prec@1:0.7404	Best Epoch:10
[11][0/750]	Loss:1.10150	Lr:0.000880	Data:1758ms	Train:0326ms	Mem:4.12Gb	Prec@1:0.7500
[11][300/750]	Loss:2.00894	Lr:0.000870	Data:0019ms	Train:0266ms	Mem:4.12Gb	Prec@1:0.6312
[11][600/750]	Loss:1.24081	Lr:0.000859	Data:0011ms	Train:0264ms	Mem:4.12Gb	Prec@1:0.6421
[11][0/725]	Loss:1.77193	Lr:0.000000	Data:1933ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.5000
[11][300/725]	Loss:0.04765	Lr:0.000000	Data:0054ms	Train:0098ms	Mem:4.12Gb	Prec@1:0.7554
[11][600/725]	Loss:0.97511	Lr:0.000000	Data:0032ms	Train:0110ms	Mem:4.12Gb	Prec@1:0.7456
Train Prec@1:0.6428	Val Prec@1:0.7601
BestV Prec@1:0.7601	Best Epoch:11
[12][0/750]	Loss:1.41447	Lr:0.000854	Data:1844ms	Train:0413ms	Mem:4.12Gb	Prec@1:0.3750
[12][300/750]	Loss:1.56211	Lr:0.000842	Data:0035ms	Train:0286ms	Mem:4.12Gb	Prec@1:0.6632
[12][600/750]	Loss:1.69407	Lr:0.000831	Data:0003ms	Train:0254ms	Mem:4.12Gb	Prec@1:0.6643
[12][0/725]	Loss:0.91276	Lr:0.000000	Data:1819ms	Train:0064ms	Mem:4.12Gb	Prec@1:0.7500
[12][300/725]	Loss:0.04207	Lr:0.000000	Data:0028ms	Train:0058ms	Mem:4.12Gb	Prec@1:0.7442
[12][600/725]	Loss:0.35392	Lr:0.000000	Data:0087ms	Train:0059ms	Mem:4.12Gb	Prec@1:0.7502
Train Prec@1:0.6670	Val Prec@1:0.7641
BestV Prec@1:0.7641	Best Epoch:12
[13][0/750]	Loss:1.09776	Lr:0.000825	Data:1774ms	Train:0416ms	Mem:4.12Gb	Prec@1:0.7500
[13][300/750]	Loss:1.13594	Lr:0.000813	Data:0038ms	Train:0286ms	Mem:4.12Gb	Prec@1:0.6831
[13][600/750]	Loss:0.91306	Lr:0.000800	Data:0024ms	Train:0276ms	Mem:4.12Gb	Prec@1:0.6828
[13][0/725]	Loss:0.95040	Lr:0.000000	Data:2106ms	Train:0014ms	Mem:4.12Gb	Prec@1:0.7500
[13][300/725]	Loss:0.00805	Lr:0.000000	Data:0083ms	Train:0052ms	Mem:4.12Gb	Prec@1:0.7762
[13][600/725]	Loss:0.62216	Lr:0.000000	Data:0107ms	Train:0046ms	Mem:4.12Gb	Prec@1:0.7737
Train Prec@1:0.6864	Val Prec@1:0.7893
BestV Prec@1:0.7893	Best Epoch:13
[14][0/750]	Loss:0.98405	Lr:0.000794	Data:2148ms	Train:0378ms	Mem:4.12Gb	Prec@1:0.6250
[14][300/750]	Loss:1.19913	Lr:0.000781	Data:0002ms	Train:0246ms	Mem:4.12Gb	Prec@1:0.7043
[14][600/750]	Loss:0.91614	Lr:0.000768	Data:0007ms	Train:0252ms	Mem:4.12Gb	Prec@1:0.7030
[14][0/725]	Loss:1.06131	Lr:0.000000	Data:1973ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.7500
[14][300/725]	Loss:0.01569	Lr:0.000000	Data:0071ms	Train:0102ms	Mem:4.12Gb	Prec@1:0.7841
[14][600/725]	Loss:0.46378	Lr:0.000000	Data:0100ms	Train:0113ms	Mem:4.12Gb	Prec@1:0.7829
Train Prec@1:0.7022	Val Prec@1:0.7981
BestV Prec@1:0.7981	Best Epoch:14
[15][0/750]	Loss:1.60557	Lr:0.000761	Data:1822ms	Train:0372ms	Mem:4.12Gb	Prec@1:0.6250
[15][300/750]	Loss:2.08099	Lr:0.000748	Data:0028ms	Train:0249ms	Mem:4.12Gb	Prec@1:0.7218
[15][600/750]	Loss:1.38227	Lr:0.000734	Data:0003ms	Train:0256ms	Mem:4.12Gb	Prec@1:0.7171
[15][0/725]	Loss:1.08881	Lr:0.000000	Data:1873ms	Train:0046ms	Mem:4.12Gb	Prec@1:0.6250
[15][300/725]	Loss:0.01315	Lr:0.000000	Data:0217ms	Train:0071ms	Mem:4.12Gb	Prec@1:0.7936
[15][600/725]	Loss:0.95049	Lr:0.000000	Data:0094ms	Train:0086ms	Mem:4.12Gb	Prec@1:0.7960
Train Prec@1:0.7211	Val Prec@1:0.8112
BestV Prec@1:0.8112	Best Epoch:15
[16][0/750]	Loss:0.91612	Lr:0.000727	Data:1762ms	Train:0343ms	Mem:4.12Gb	Prec@1:0.6250
[16][300/750]	Loss:1.37557	Lr:0.000713	Data:0025ms	Train:0258ms	Mem:4.12Gb	Prec@1:0.7346
[16][600/750]	Loss:1.46811	Lr:0.000699	Data:0036ms	Train:0247ms	Mem:4.12Gb	Prec@1:0.7369
[16][0/725]	Loss:0.77127	Lr:0.000000	Data:2457ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.7500
[16][300/725]	Loss:0.02776	Lr:0.000000	Data:0077ms	Train:0060ms	Mem:4.12Gb	Prec@1:0.7890
[16][600/725]	Loss:0.45350	Lr:0.000000	Data:0048ms	Train:0206ms	Mem:4.12Gb	Prec@1:0.7906
Train Prec@1:0.7376	Val Prec@1:0.8069
BestV Prec@1:0.8112	Best Epoch:15
[17][0/750]	Loss:1.00123	Lr:0.000691	Data:1777ms	Train:0408ms	Mem:4.12Gb	Prec@1:0.7500
[17][300/750]	Loss:0.83322	Lr:0.000677	Data:0003ms	Train:0275ms	Mem:4.12Gb	Prec@1:0.7591
[17][600/750]	Loss:1.42419	Lr:0.000662	Data:0041ms	Train:0261ms	Mem:4.12Gb	Prec@1:0.7525
[17][0/725]	Loss:0.81518	Lr:0.000000	Data:2133ms	Train:0038ms	Mem:4.12Gb	Prec@1:0.6250
[17][300/725]	Loss:0.02313	Lr:0.000000	Data:0042ms	Train:0142ms	Mem:4.12Gb	Prec@1:0.8011
[17][600/725]	Loss:0.55841	Lr:0.000000	Data:0086ms	Train:0140ms	Mem:4.12Gb	Prec@1:0.8032
Train Prec@1:0.7519	Val Prec@1:0.8160
BestV Prec@1:0.8160	Best Epoch:17
[18][0/750]	Loss:0.70181	Lr:0.000654	Data:1860ms	Train:0315ms	Mem:4.12Gb	Prec@1:1.0000
[18][300/750]	Loss:1.73701	Lr:0.000639	Data:0024ms	Train:0283ms	Mem:4.12Gb	Prec@1:0.7679
[18][600/750]	Loss:1.46305	Lr:0.000624	Data:0038ms	Train:0320ms	Mem:4.12Gb	Prec@1:0.7602
[18][0/725]	Loss:0.89556	Lr:0.000000	Data:1832ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.7500
[18][300/725]	Loss:0.02170	Lr:0.000000	Data:0058ms	Train:0105ms	Mem:4.12Gb	Prec@1:0.8061
[18][600/725]	Loss:0.31789	Lr:0.000000	Data:0072ms	Train:0044ms	Mem:4.12Gb	Prec@1:0.8076
Train Prec@1:0.7568	Val Prec@1:0.8190
BestV Prec@1:0.8190	Best Epoch:18
[19][0/750]	Loss:1.22605	Lr:0.000617	Data:1802ms	Train:0407ms	Mem:4.12Gb	Prec@1:0.7500
[19][300/750]	Loss:0.79740	Lr:0.000601	Data:0011ms	Train:0248ms	Mem:4.12Gb	Prec@1:0.7753
[19][600/750]	Loss:1.03920	Lr:0.000586	Data:0005ms	Train:0266ms	Mem:4.12Gb	Prec@1:0.7679
[19][0/725]	Loss:1.11561	Lr:0.000000	Data:2057ms	Train:0045ms	Mem:4.12Gb	Prec@1:0.7500
[19][300/725]	Loss:0.01035	Lr:0.000000	Data:0117ms	Train:0069ms	Mem:4.12Gb	Prec@1:0.8164
[19][600/725]	Loss:0.48053	Lr:0.000000	Data:0057ms	Train:0167ms	Mem:4.12Gb	Prec@1:0.8157
Train Prec@1:0.7671	Val Prec@1:0.8274
BestV Prec@1:0.8274	Best Epoch:19
[20][0/750]	Loss:1.10706	Lr:0.000578	Data:1617ms	Train:0317ms	Mem:4.12Gb	Prec@1:0.6250
[20][300/750]	Loss:0.54869	Lr:0.000563	Data:0013ms	Train:0251ms	Mem:4.12Gb	Prec@1:0.7861
[20][600/750]	Loss:0.54613	Lr:0.000547	Data:0011ms	Train:0269ms	Mem:4.12Gb	Prec@1:0.7856
[20][0/725]	Loss:0.84140	Lr:0.000000	Data:1985ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.7500
[20][300/725]	Loss:0.01955	Lr:0.000000	Data:0044ms	Train:0073ms	Mem:4.12Gb	Prec@1:0.8144
[20][600/725]	Loss:0.46180	Lr:0.000000	Data:0065ms	Train:0107ms	Mem:4.12Gb	Prec@1:0.8207
Train Prec@1:0.7821	Val Prec@1:0.8331
BestV Prec@1:0.8331	Best Epoch:20
[21][0/750]	Loss:0.96686	Lr:0.000539	Data:2053ms	Train:0343ms	Mem:4.12Gb	Prec@1:0.6250
[21][300/750]	Loss:1.84422	Lr:0.000524	Data:0015ms	Train:0290ms	Mem:4.12Gb	Prec@1:0.7998
[21][600/750]	Loss:0.82782	Lr:0.000508	Data:0007ms	Train:0292ms	Mem:4.12Gb	Prec@1:0.7920
[21][0/725]	Loss:1.32273	Lr:0.000000	Data:1622ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.6250
[21][300/725]	Loss:0.02002	Lr:0.000000	Data:0058ms	Train:0142ms	Mem:4.12Gb	Prec@1:0.8069
[21][600/725]	Loss:0.37734	Lr:0.000000	Data:0028ms	Train:0106ms	Mem:4.12Gb	Prec@1:0.8062
Train Prec@1:0.7875	Val Prec@1:0.8203
BestV Prec@1:0.8331	Best Epoch:20
[22][0/750]	Loss:1.34820	Lr:0.000500	Data:1765ms	Train:0335ms	Mem:4.12Gb	Prec@1:0.6250
[22][300/750]	Loss:1.73488	Lr:0.000484	Data:0028ms	Train:0251ms	Mem:4.12Gb	Prec@1:0.7944
[22][600/750]	Loss:0.38012	Lr:0.000469	Data:0011ms	Train:0323ms	Mem:4.12Gb	Prec@1:0.7951
[22][0/725]	Loss:1.17560	Lr:0.000000	Data:1700ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.6250
[22][300/725]	Loss:0.01419	Lr:0.000000	Data:0055ms	Train:0062ms	Mem:4.12Gb	Prec@1:0.8065
[22][600/725]	Loss:0.56059	Lr:0.000000	Data:0107ms	Train:0079ms	Mem:4.12Gb	Prec@1:0.8180
Train Prec@1:0.7948	Val Prec@1:0.8300
BestV Prec@1:0.8331	Best Epoch:20
[23][0/750]	Loss:0.64816	Lr:0.000461	Data:1892ms	Train:0390ms	Mem:4.12Gb	Prec@1:0.7500
[23][300/750]	Loss:0.82799	Lr:0.000445	Data:0014ms	Train:0267ms	Mem:4.12Gb	Prec@1:0.7998
[23][600/750]	Loss:0.76669	Lr:0.000429	Data:0011ms	Train:0269ms	Mem:4.12Gb	Prec@1:0.8014
[23][0/725]	Loss:1.23528	Lr:0.000000	Data:1908ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.6250
[23][300/725]	Loss:0.01746	Lr:0.000000	Data:0113ms	Train:0063ms	Mem:4.12Gb	Prec@1:0.8164
[23][600/725]	Loss:0.34829	Lr:0.000000	Data:0061ms	Train:0112ms	Mem:4.12Gb	Prec@1:0.8151
Train Prec@1:0.8013	Val Prec@1:0.8305
BestV Prec@1:0.8331	Best Epoch:20
[24][0/750]	Loss:1.19364	Lr:0.000422	Data:1803ms	Train:0333ms	Mem:4.12Gb	Prec@1:0.8750
[24][300/750]	Loss:0.22035	Lr:0.000406	Data:0011ms	Train:0249ms	Mem:4.12Gb	Prec@1:0.8077
[24][600/750]	Loss:0.68650	Lr:0.000391	Data:0025ms	Train:0311ms	Mem:4.12Gb	Prec@1:0.8072
[24][0/725]	Loss:1.10548	Lr:0.000000	Data:1884ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.7500
[24][300/725]	Loss:0.00989	Lr:0.000000	Data:0034ms	Train:0085ms	Mem:4.12Gb	Prec@1:0.8214
[24][600/725]	Loss:0.31491	Lr:0.000000	Data:0028ms	Train:0093ms	Mem:4.12Gb	Prec@1:0.8247
Train Prec@1:0.8088	Val Prec@1:0.8378
BestV Prec@1:0.8378	Best Epoch:24
[25][0/750]	Loss:0.60527	Lr:0.000383	Data:2009ms	Train:0369ms	Mem:4.12Gb	Prec@1:0.8750
[25][300/750]	Loss:1.20769	Lr:0.000368	Data:0012ms	Train:0298ms	Mem:4.12Gb	Prec@1:0.8148
[25][600/750]	Loss:0.96727	Lr:0.000353	Data:0008ms	Train:0266ms	Mem:4.12Gb	Prec@1:0.8145
[25][0/725]	Loss:1.12245	Lr:0.000000	Data:1875ms	Train:0079ms	Mem:4.12Gb	Prec@1:0.6250
[25][300/725]	Loss:0.01245	Lr:0.000000	Data:0035ms	Train:0089ms	Mem:4.12Gb	Prec@1:0.8144
[25][600/725]	Loss:0.58477	Lr:0.000000	Data:0086ms	Train:0046ms	Mem:4.12Gb	Prec@1:0.8163
Train Prec@1:0.8126	Val Prec@1:0.8290
BestV Prec@1:0.8378	Best Epoch:24
[26][0/750]	Loss:0.82966	Lr:0.000345	Data:1708ms	Train:0359ms	Mem:4.12Gb	Prec@1:0.7500
[26][300/750]	Loss:0.27010	Lr:0.000331	Data:0012ms	Train:0284ms	Mem:4.12Gb	Prec@1:0.8156
[26][600/750]	Loss:1.20691	Lr:0.000316	Data:0014ms	Train:0255ms	Mem:4.12Gb	Prec@1:0.8128
[26][0/725]	Loss:0.77565	Lr:0.000000	Data:2074ms	Train:0025ms	Mem:4.12Gb	Prec@1:0.7500
[26][300/725]	Loss:0.00378	Lr:0.000000	Data:0094ms	Train:0077ms	Mem:4.12Gb	Prec@1:0.8310
[26][600/725]	Loss:0.42404	Lr:0.000000	Data:0053ms	Train:0098ms	Mem:4.12Gb	Prec@1:0.8324
Train Prec@1:0.8138	Val Prec@1:0.8440
BestV Prec@1:0.8440	Best Epoch:26
[27][0/750]	Loss:0.91564	Lr:0.000309	Data:1372ms	Train:0424ms	Mem:4.12Gb	Prec@1:0.6250
[27][300/750]	Loss:1.35088	Lr:0.000294	Data:0005ms	Train:0260ms	Mem:4.12Gb	Prec@1:0.8252
[27][600/750]	Loss:0.73277	Lr:0.000280	Data:0028ms	Train:0250ms	Mem:4.12Gb	Prec@1:0.8278
[27][0/725]	Loss:0.95384	Lr:0.000000	Data:1823ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.7500
[27][300/725]	Loss:0.00543	Lr:0.000000	Data:0056ms	Train:0169ms	Mem:4.12Gb	Prec@1:0.8235
[27][600/725]	Loss:0.57985	Lr:0.000000	Data:0069ms	Train:0069ms	Mem:4.12Gb	Prec@1:0.8249
Train Prec@1:0.8238	Val Prec@1:0.8376
BestV Prec@1:0.8440	Best Epoch:26
[28][0/750]	Loss:0.98597	Lr:0.000273	Data:1756ms	Train:0360ms	Mem:4.12Gb	Prec@1:0.7500
[28][300/750]	Loss:0.66234	Lr:0.000259	Data:0028ms	Train:0253ms	Mem:4.12Gb	Prec@1:0.8243
[28][600/750]	Loss:2.14646	Lr:0.000245	Data:0022ms	Train:0280ms	Mem:4.12Gb	Prec@1:0.8338
[28][0/725]	Loss:0.92003	Lr:0.000000	Data:1767ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.7500
[28][300/725]	Loss:0.01231	Lr:0.000000	Data:0088ms	Train:0128ms	Mem:4.12Gb	Prec@1:0.8264
[28][600/725]	Loss:0.56640	Lr:0.000000	Data:0028ms	Train:0114ms	Mem:4.12Gb	Prec@1:0.8295
Train Prec@1:0.8353	Val Prec@1:0.8407
BestV Prec@1:0.8440	Best Epoch:26
[29][0/750]	Loss:1.15448	Lr:0.000239	Data:1718ms	Train:0379ms	Mem:4.12Gb	Prec@1:0.8750
[29][300/750]	Loss:1.61083	Lr:0.000225	Data:0012ms	Train:0246ms	Mem:4.12Gb	Prec@1:0.8189
[29][600/750]	Loss:0.62512	Lr:0.000212	Data:0003ms	Train:0281ms	Mem:4.12Gb	Prec@1:0.8236
[29][0/725]	Loss:0.71290	Lr:0.000000	Data:2018ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.7500
[29][300/725]	Loss:0.00791	Lr:0.000000	Data:0063ms	Train:0080ms	Mem:4.12Gb	Prec@1:0.8347
[29][600/725]	Loss:0.42588	Lr:0.000000	Data:0102ms	Train:0025ms	Mem:4.12Gb	Prec@1:0.8299
Train Prec@1:0.8252	Val Prec@1:0.8416
BestV Prec@1:0.8440	Best Epoch:26
[30][0/750]	Loss:1.04843	Lr:0.000206	Data:1454ms	Train:0430ms	Mem:4.12Gb	Prec@1:0.7500
[30][300/750]	Loss:0.49899	Lr:0.000194	Data:0043ms	Train:0286ms	Mem:4.12Gb	Prec@1:0.8401
[30][600/750]	Loss:0.98525	Lr:0.000181	Data:0006ms	Train:0255ms	Mem:4.12Gb	Prec@1:0.8361
[30][0/725]	Loss:1.01519	Lr:0.000000	Data:1498ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.7500
[30][300/725]	Loss:0.00587	Lr:0.000000	Data:0079ms	Train:0052ms	Mem:4.12Gb	Prec@1:0.8310
[30][600/725]	Loss:0.47891	Lr:0.000000	Data:0143ms	Train:0084ms	Mem:4.12Gb	Prec@1:0.8288
Train Prec@1:0.8332	Val Prec@1:0.8421
BestV Prec@1:0.8440	Best Epoch:26
[31][0/750]	Loss:0.74644	Lr:0.000175	Data:1956ms	Train:0343ms	Mem:4.12Gb	Prec@1:0.6250
[31][300/750]	Loss:0.75521	Lr:0.000163	Data:0002ms	Train:0257ms	Mem:4.12Gb	Prec@1:0.8347
[31][600/750]	Loss:0.37890	Lr:0.000152	Data:0043ms	Train:0258ms	Mem:4.12Gb	Prec@1:0.8374
[31][0/725]	Loss:1.01839	Lr:0.000000	Data:1714ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.7500
[31][300/725]	Loss:0.01479	Lr:0.000000	Data:0089ms	Train:0042ms	Mem:4.12Gb	Prec@1:0.8314
[31][600/725]	Loss:0.39056	Lr:0.000000	Data:0039ms	Train:0036ms	Mem:4.12Gb	Prec@1:0.8349
Train Prec@1:0.8322	Val Prec@1:0.8457
BestV Prec@1:0.8457	Best Epoch:31
[32][0/750]	Loss:1.67749	Lr:0.000146	Data:2027ms	Train:0338ms	Mem:4.12Gb	Prec@1:0.5000
[32][300/750]	Loss:1.05462	Lr:0.000135	Data:0002ms	Train:0246ms	Mem:4.12Gb	Prec@1:0.8418
[32][600/750]	Loss:0.22893	Lr:0.000125	Data:0007ms	Train:0269ms	Mem:4.12Gb	Prec@1:0.8442
[32][0/725]	Loss:0.91751	Lr:0.000000	Data:2059ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.7500
[32][300/725]	Loss:0.00973	Lr:0.000000	Data:0063ms	Train:0070ms	Mem:4.12Gb	Prec@1:0.8268
[32][600/725]	Loss:0.36554	Lr:0.000000	Data:0045ms	Train:0189ms	Mem:4.12Gb	Prec@1:0.8299
Train Prec@1:0.8392	Val Prec@1:0.8431
BestV Prec@1:0.8457	Best Epoch:31
[33][0/750]	Loss:0.84467	Lr:0.000120	Data:2059ms	Train:0326ms	Mem:4.12Gb	Prec@1:0.8750
[33][300/750]	Loss:0.44770	Lr:0.000110	Data:0030ms	Train:0261ms	Mem:4.12Gb	Prec@1:0.8347
[33][600/750]	Loss:0.86307	Lr:0.000100	Data:0002ms	Train:0257ms	Mem:4.12Gb	Prec@1:0.8396
[33][0/725]	Loss:0.74084	Lr:0.000000	Data:2087ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.7500
[33][300/725]	Loss:0.01008	Lr:0.000000	Data:0049ms	Train:0132ms	Mem:4.12Gb	Prec@1:0.8368
[33][600/725]	Loss:0.37265	Lr:0.000000	Data:0049ms	Train:0089ms	Mem:4.12Gb	Prec@1:0.8371
Train Prec@1:0.8433	Val Prec@1:0.8486
BestV Prec@1:0.8486	Best Epoch:33
[34][0/750]	Loss:0.55129	Lr:0.000095	Data:1857ms	Train:0323ms	Mem:4.12Gb	Prec@1:0.8750
[34][300/750]	Loss:0.22043	Lr:0.000086	Data:0033ms	Train:0267ms	Mem:4.12Gb	Prec@1:0.8625
[34][600/750]	Loss:0.28293	Lr:0.000078	Data:0002ms	Train:0294ms	Mem:4.12Gb	Prec@1:0.8498
[34][0/725]	Loss:0.76686	Lr:0.000000	Data:1927ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.7500
[34][300/725]	Loss:0.00911	Lr:0.000000	Data:0035ms	Train:0123ms	Mem:4.12Gb	Prec@1:0.8364
[34][600/725]	Loss:0.46027	Lr:0.000000	Data:0067ms	Train:0179ms	Mem:4.12Gb	Prec@1:0.8365
Train Prec@1:0.8472	Val Prec@1:0.8481
BestV Prec@1:0.8486	Best Epoch:33
[35][0/750]	Loss:1.41509	Lr:0.000074	Data:2023ms	Train:0398ms	Mem:4.12Gb	Prec@1:0.6250
[35][300/750]	Loss:0.53013	Lr:0.000066	Data:0010ms	Train:0246ms	Mem:4.12Gb	Prec@1:0.8443
[35][600/750]	Loss:0.14556	Lr:0.000058	Data:0031ms	Train:0278ms	Mem:4.12Gb	Prec@1:0.8509
[35][0/725]	Loss:0.83534	Lr:0.000000	Data:1909ms	Train:0013ms	Mem:4.12Gb	Prec@1:0.7500
[35][300/725]	Loss:0.00924	Lr:0.000000	Data:0064ms	Train:0087ms	Mem:4.12Gb	Prec@1:0.8355
[35][600/725]	Loss:0.39036	Lr:0.000000	Data:0103ms	Train:0078ms	Mem:4.12Gb	Prec@1:0.8355
Train Prec@1:0.8512	Val Prec@1:0.8466
BestV Prec@1:0.8486	Best Epoch:33
[36][0/750]	Loss:0.29289	Lr:0.000054	Data:1686ms	Train:0325ms	Mem:4.12Gb	Prec@1:0.8750
[36][300/750]	Loss:0.26302	Lr:0.000048	Data:0028ms	Train:0278ms	Mem:4.12Gb	Prec@1:0.8563
[36][600/750]	Loss:1.08932	Lr:0.000041	Data:0004ms	Train:0275ms	Mem:4.12Gb	Prec@1:0.8527
[36][0/725]	Loss:0.83510	Lr:0.000000	Data:1935ms	Train:0033ms	Mem:4.12Gb	Prec@1:0.7500
[36][300/725]	Loss:0.00515	Lr:0.000000	Data:0077ms	Train:0102ms	Mem:4.12Gb	Prec@1:0.8314
[36][600/725]	Loss:0.51267	Lr:0.000000	Data:0034ms	Train:0108ms	Mem:4.12Gb	Prec@1:0.8324
Train Prec@1:0.8473	Val Prec@1:0.8455
BestV Prec@1:0.8486	Best Epoch:33
[37][0/750]	Loss:0.52642	Lr:0.000038	Data:1837ms	Train:0330ms	Mem:4.12Gb	Prec@1:0.8750
[37][300/750]	Loss:0.85006	Lr:0.000032	Data:0011ms	Train:0263ms	Mem:4.12Gb	Prec@1:0.8476
[37][600/750]	Loss:0.43567	Lr:0.000027	Data:0021ms	Train:0309ms	Mem:4.12Gb	Prec@1:0.8502
[37][0/725]	Loss:0.95031	Lr:0.000000	Data:1851ms	Train:0021ms	Mem:4.12Gb	Prec@1:0.7500
[37][300/725]	Loss:0.00463	Lr:0.000000	Data:0047ms	Train:0071ms	Mem:4.12Gb	Prec@1:0.8318
[37][600/725]	Loss:0.36957	Lr:0.000000	Data:0065ms	Train:0171ms	Mem:4.12Gb	Prec@1:0.8359
Train Prec@1:0.8467	Val Prec@1:0.8481
BestV Prec@1:0.8486	Best Epoch:33
[38][0/750]	Loss:0.79485	Lr:0.000024	Data:2139ms	Train:0306ms	Mem:4.12Gb	Prec@1:0.7500
[38][300/750]	Loss:1.11463	Lr:0.000020	Data:0036ms	Train:0284ms	Mem:4.12Gb	Prec@1:0.8526
[38][600/750]	Loss:0.23201	Lr:0.000016	Data:0003ms	Train:0294ms	Mem:4.12Gb	Prec@1:0.8450
[38][0/725]	Loss:0.90173	Lr:0.000000	Data:2009ms	Train:0017ms	Mem:4.12Gb	Prec@1:0.7500
[38][300/725]	Loss:0.00423	Lr:0.000000	Data:0071ms	Train:0178ms	Mem:4.12Gb	Prec@1:0.8260
[38][600/725]	Loss:0.35260	Lr:0.000000	Data:0079ms	Train:0113ms	Mem:4.12Gb	Prec@1:0.8301
Train Prec@1:0.8504	Val Prec@1:0.8431
BestV Prec@1:0.8486	Best Epoch:33
[39][0/750]	Loss:0.69447	Lr:0.000014	Data:1847ms	Train:0312ms	Mem:4.12Gb	Prec@1:0.7500
[39][300/750]	Loss:1.28527	Lr:0.000010	Data:0027ms	Train:0316ms	Mem:4.12Gb	Prec@1:0.8567
[39][600/750]	Loss:0.63094	Lr:0.000007	Data:0009ms	Train:0331ms	Mem:4.12Gb	Prec@1:0.8544
[39][0/725]	Loss:0.87133	Lr:0.000000	Data:2093ms	Train:0017ms	Mem:4.12Gb	Prec@1:0.7500
[39][300/725]	Loss:0.01082	Lr:0.000000	Data:0060ms	Train:0012ms	Mem:4.12Gb	Prec@1:0.8339
[39][600/725]	Loss:0.40936	Lr:0.000000	Data:0085ms	Train:0105ms	Mem:4.12Gb	Prec@1:0.8347
Train Prec@1:0.8520	Val Prec@1:0.8464
BestV Prec@1:0.8486	Best Epoch:33
[40][0/750]	Loss:0.24019	Lr:0.000006	Data:1809ms	Train:0425ms	Mem:4.12Gb	Prec@1:1.0000
[40][300/750]	Loss:0.52470	Lr:0.000004	Data:0044ms	Train:0278ms	Mem:4.12Gb	Prec@1:0.8517
[40][600/750]	Loss:0.38904	Lr:0.000002	Data:0010ms	Train:0293ms	Mem:4.12Gb	Prec@1:0.8513
[40][0/725]	Loss:1.07422	Lr:0.000000	Data:1886ms	Train:0014ms	Mem:4.12Gb	Prec@1:0.7500
[40][300/725]	Loss:0.00400	Lr:0.000000	Data:0051ms	Train:0123ms	Mem:4.12Gb	Prec@1:0.8331
[40][600/725]	Loss:0.35567	Lr:0.000000	Data:0084ms	Train:0117ms	Mem:4.12Gb	Prec@1:0.8342
Train Prec@1:0.8517	Val Prec@1:0.8462
BestV Prec@1:0.8486	Best Epoch:33
[41][0/750]	Loss:0.83995	Lr:0.000002	Data:1930ms	Train:0394ms	Mem:4.12Gb	Prec@1:0.8750
[41][300/750]	Loss:1.08045	Lr:0.000001	Data:0002ms	Train:0247ms	Mem:4.12Gb	Prec@1:0.8488
[41][600/750]	Loss:0.80235	Lr:0.000000	Data:0011ms	Train:0289ms	Mem:4.12Gb	Prec@1:0.8552
[41][0/725]	Loss:0.80234	Lr:0.000000	Data:2022ms	Train:0025ms	Mem:4.12Gb	Prec@1:0.7500
[41][300/725]	Loss:0.00867	Lr:0.000000	Data:0163ms	Train:0112ms	Mem:4.12Gb	Prec@1:0.8360
[41][600/725]	Loss:0.43697	Lr:0.000000	Data:0066ms	Train:0048ms	Mem:4.12Gb	Prec@1:0.8365
Train Prec@1:0.8567	Val Prec@1:0.8492
BestV Prec@1:0.8492	Best Epoch:41
CONFIGDIR=/home/liuhaiyang/.config/matplotlib
(private) matplotlib data path: /home/liuhaiyang/.conda/envs/ptnew/lib/python3.7/site-packages/matplotlib/mpl-data
matplotlib data path: /home/liuhaiyang/.conda/envs/ptnew/lib/python3.7/site-packages/matplotlib/mpl-data
loaded rc file /home/liuhaiyang/.conda/envs/ptnew/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
matplotlib version 3.2.1
interactive is False
platform is linux
loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', '_collections_abc', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', '_bootlocale', '_locale', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'google', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'numpy', '__future__', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'mkl', 'ctypes', '_ctypes', 'struct', '_struct', 'ctypes._endian', 'mkl._mklinit', 'mkl._py_mkl_service', 'cython_runtime', 'six', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'datetime', 'time', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'fnmatch', 'ntpath', 'errno', 'urllib', 'urllib.parse', 'pickle', '_compat_pickle', '_pickle', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'collections.abc', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'subprocess', 'signal', '_posixsubprocess', 'select', 'selectors', 'threading', 'traceback', 'linecache', 'tokenize', 'token', '_weakrefset', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'ast', '_ast', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'weakref', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'numpy.lib._iotools', 'numpy.lib.financial', 'decimal', '_decimal', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_14', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'cv2', 'cv2.Error', 'cv2.aruco', 'cv2.bgsegm', 'cv2.bioinspired', 'cv2.cuda', 'cv2.datasets', 'cv2.detail', 'cv2.dnn', 'cv2.face', 'cv2.fisheye', 'cv2.flann', 'cv2.freetype', 'cv2.ft', 'cv2.hdf', 'cv2.hfs', 'cv2.img_hash', 'cv2.instr', 'cv2.ipp', 'cv2.line_descriptor', 'cv2.linemod', 'cv2.ml', 'cv2.motempl', 'cv2.multicalib', 'cv2.ocl', 'cv2.ogl', 'cv2.omnidir', 'cv2.optflow', 'cv2.plot', 'cv2.ppf_match_3d', 'cv2.reg', 'cv2.rgbd', 'cv2.saliency', 'cv2.structured_light', 'cv2.text', 'cv2.videostab', 'cv2.xfeatures2d', 'cv2.ximgproc', 'cv2.ximgproc.segmentation', 'cv2.xphoto', 'torch', 'torch._utils', 'torch._utils_internal', 'inspect', 'dis', 'opcode', '_opcode', 'torch.version', 'torch._six', 'queue', '_queue', 'torch._C._onnx', 'torch._C._jit_tree_views', 'torch._C.cpp', 'torch._C.cpp.nn', 'torch._C._cudart', 'torch._C._nvtx', 'torch._C._cudnn', 'torch._C', 'torch.random', 'torch.serialization', 'difflib', 'tarfile', 'copy', 'tempfile', 'torch._tensor_str', 'torch.tensor', 'torch._namedtensor_internals', 'torch.utils', 'torch.utils.throughput_benchmark', 'torch.utils.hooks', 'torch.storage', 'torch.cuda', 'torch.cuda._utils', 'torch.cuda.memory', 'torch.cuda.random', 'torch.cuda.sparse', 'torch.cuda.profiler', 'torch.cuda.nvtx', 'torch.cuda.streams', 'torch.cuda.amp', 'torch.cuda.amp.grad_scaler', 'torch.sparse', 'torch.functional', 'torch.nn', 'torch.nn.modules', 'torch.nn.modules.module', 'torch.nn.parameter', 'torch.nn.modules.linear', 'torch.nn.functional', 'torch.nn._reduction', 'torch.nn.modules.utils', 'torch.nn.grad', 'torch._VF', 'torch._jit_internal', 'typing', 'typing.io', 'typing.re', 'torch._overrides', 'torch.nn.init', 'torch.nn.modules.conv', 'torch.nn.modules.activation', 'torch.nn.modules.loss', 'torch.nn.modules.container', 'torch.nn.modules.pooling', 'torch.nn.modules.batchnorm', 'torch.nn.modules._functions', 'torch.autograd', 'torch.autograd.variable', 'torch.autograd.function', 'torch.autograd.gradcheck', 'torch.testing', 'torch.autograd.grad_mode', 'torch.autograd.anomaly_mode', 'torch.autograd.profiler', 'torch.autograd.functional', 'torch.nn.modules.instancenorm', 'torch.nn.modules.normalization', 'torch.nn.modules.dropout', 'torch.nn.modules.padding', 'torch.nn.modules.sparse', 'torch.nn.modules.rnn', 'torch.nn.utils', 'torch.nn.utils.rnn', 'torch.nn.utils.clip_grad', 'torch.nn.utils.weight_norm', 'torch.nn.utils.convert_parameters', 'torch.nn.utils.spectral_norm', 'torch.nn.utils.fusion', 'torch.nn.utils.memory_format', 'torch.nn.modules.pixelshuffle', 'torch.nn.modules.upsampling', 'torch.nn.modules.distance', 'torch.nn.modules.fold', 'torch.nn.modules.adaptive', 'torch.nn.modules.transformer', 'torch.nn.modules.flatten', 'torch.nn.parallel', 'torch.nn.parallel.parallel_apply', 'torch.nn.parallel.replicate', 'torch.cuda.comm', 'torch.cuda.nccl', 'torch.nn.parallel.data_parallel', 'torch.nn.parallel.scatter_gather', 'torch.nn.parallel._functions', 'torch.nn.parallel.distributed', 'torch.distributed', 'torch.distributed.distributed_c10d', 'torch.distributed.constants', 'torch.distributed.rendezvous', 'torch._lowrank', 'torch._linalg_utils', 'torch.nn.intrinsic', 'torch.nn.intrinsic.modules', 'torch.nn.intrinsic.modules.fused', 'torch.nn.quantized', 'torch.nn.quantized.modules', 'torch.nn.quantized.modules.activation', 'torch.nn.quantized.functional', 'torch.nn.quantized.modules.batchnorm', 'torch.nn.quantized.modules.conv', 'torch.nn.intrinsic.qat', 'torch.nn.intrinsic.qat.modules', 'torch.nn.intrinsic.qat.modules.linear_relu', 'torch.nn.qat', 'torch.nn.qat.modules', 'torch.nn.qat.modules.linear', 'torch.nn.qat.modules.conv', 'torch.nn.intrinsic.qat.modules.conv_fused', 'torch._ops', 'torch.jit', 'torch.jit.annotations', 'torch.jit._recursive', 'torch.jit.frontend', 'string', '_string', 'torch.jit._builtins', 'torch.backends', 'torch.backends.cudnn', 'torch.distributed.autograd', 'torch.nn.quantized.modules.utils', 'torch.nn.quantized.modules.linear', 'torch.nn.quantized.modules.functional_modules', 'torch.optim', 'torch.optim.adadelta', 'torch.optim.optimizer', 'torch.optim.adagrad', 'torch.optim.adam', 'torch.optim.adamw', 'torch.optim.sparse_adam', 'torch.optim.adamax', 'torch.optim.asgd', 'torch.optim.sgd', 'torch.optim.rprop', 'torch.optim.rmsprop', 'torch.optim.lbfgs', 'torch.optim.lr_scheduler', 'torch.multiprocessing', 'torch.multiprocessing.reductions', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.util', 'atexit', 'multiprocessing.resource_sharer', 'torch.multiprocessing.spawn', 'multiprocessing.connection', '_multiprocessing', 'torch.utils.backcompat', 'torch.onnx', 'torch.hub', 'zipfile', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'locale', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', '_ssl', 'urllib.error', 'urllib.response', 'torch.distributions', 'torch.distributions.bernoulli', 'torch.distributions.constraints', 'torch.distributions.exp_family', 'torch.distributions.distribution', 'torch.distributions.utils', 'torch.distributions.beta', 'torch.distributions.dirichlet', 'torch.distributions.binomial', 'torch.distributions.categorical', 'torch.distributions.cauchy', 'torch.distributions.chi2', 'torch.distributions.gamma', 'torch.distributions.constraint_registry', 'torch.distributions.transforms', 'torch.distributions.continuous_bernoulli', 'torch.distributions.exponential', 'torch.distributions.fishersnedecor', 'torch.distributions.geometric', 'torch.distributions.gumbel', 'torch.distributions.uniform', 'torch.distributions.transformed_distribution', 'torch.distributions.half_cauchy', 'torch.distributions.half_normal', 'torch.distributions.normal', 'torch.distributions.independent', 'torch.distributions.kl', 'torch.distributions.laplace', 'torch.distributions.lowrank_multivariate_normal', 'torch.distributions.multivariate_normal', 'torch.distributions.one_hot_categorical', 'torch.distributions.pareto', 'torch.distributions.poisson', 'torch.distributions.log_normal', 'torch.distributions.logistic_normal', 'torch.distributions.mixture_same_family', 'torch.distributions.multinomial', 'torch.distributions.negative_binomial', 'torch.distributions.relaxed_bernoulli', 'torch.distributions.relaxed_categorical', 'torch.distributions.studentT', 'torch.distributions.von_mises', 'torch.distributed.rpc', 'torch.distributed.rpc.api', 'logging', 'torch.distributed.rpc.backend_registry', 'torch.distributed.rpc.constants', 'torch.distributed.rpc.internal', 'torch.distributions.weibull', 'torch.backends.cuda', 'torch.backends.mkl', 'torch.backends.mkldnn', 'torch.backends.openmp', 'torch.backends.quantized', 'torch.quantization', 'torch.quantization.quantize', 'torch.quantization.default_mappings', 'torch.nn.intrinsic.quantized', 'torch.nn.intrinsic.quantized.modules', 'torch.nn.intrinsic.quantized.modules.linear_relu', 'torch.nn.intrinsic.quantized.modules.conv_relu', 'torch.nn.quantized.dynamic', 'torch.nn.quantized.dynamic.modules', 'torch.nn.quantized.dynamic.modules.linear', 'torch.nn.quantized.dynamic.modules.rnn', 'torch.quantization.stubs', 'torch.quantization.qconfig', 'torch.quantization.observer', 'torch.quantization.fake_quantize', 'torch.quantization.fuse_modules', 'torch.utils.data', 'torch.utils.data.sampler', 'torch.utils.data.distributed', 'torch.utils.data.dataset', 'torch.utils.data.dataloader', 'torch.utils.data._utils', 'torch.utils.data._utils.worker', 'torch.utils.data._utils.signal_handling', 'torch.utils.data._utils.pin_memory', 'torch.utils.data._utils.collate', 'torch.utils.data._utils.fetch', 'torch.__config__', 'torch.__future__', 'torch._torch_docs', 'torch._tensor_docs', 'torch._storage_docs', 'torch._classes', 'torch.quasirandom', 'torch.multiprocessing._atfork', 'torch._lobpcg', 'tensorboardX', 'tensorboardX.record_writer', 'tensorboardX.crc32c', 'tensorboardX.torchvis', 'gc', 'tensorboardX.writer', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'tensorboardX.embedding', 'tensorboardX.event_file_writer', 'tensorboardX.proto', 'tensorboardX.proto.event_pb2', 'google.protobuf', 'pkg_resources', 'pkgutil', 'plistlib', 'xml', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.py31compat', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'sysconfig', 'google.protobuf.descriptor', 'google.protobuf.internal', 'google.protobuf.internal.api_implementation', 'google.protobuf.internal._api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.containers', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.reflection', 'google.protobuf.message_factory', 'google.protobuf.descriptor_pool', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.pyext.cpp_message', 'google.protobuf.symbol_database', 'tensorboardX.proto.summary_pb2', 'tensorboardX.proto.tensor_pb2', 'tensorboardX.proto.resource_handle_pb2', 'google.protobuf.internal.well_known_types', 'tensorboardX.proto.tensor_shape_pb2', 'tensorboardX.proto.types_pb2', 'tensorboardX.onnx_graph', 'tensorboardX.proto.graph_pb2', 'tensorboardX.proto.node_def_pb2', 'tensorboardX.proto.attr_value_pb2', 'tensorboardX.proto.versions_pb2', 'tensorboardX.openvino_graph', 'tensorboardX.pytorch_graph', 'tensorboardX.proto.step_stats_pb2', 'tensorboardX.proto_graph', 'tensorboardX.utils', 'tensorboardX.summary', 'six.moves', 'tensorboardX.proto.plugin_pr_curve_pb2', 'tensorboardX.proto.plugin_text_pb2', 'tensorboardX.proto.plugin_mesh_pb2', 'tensorboardX.proto.layout_pb2', 'tensorboardX.x2num', 'tensorboardX.visdom_writer', 'easydict', 'torchvision', 'torchvision.models', 'torchvision.models.alexnet', 'torchvision.models.utils', 'torchvision.models.resnet', 'torchvision.models.vgg', 'torchvision.models.squeezenet', 'torchvision.models.inception', 'torchvision.models.densenet', 'torch.utils.checkpoint', 'torchvision.models.googlenet', 'torchvision.models.mobilenet', 'torchvision.models.mnasnet', 'torchvision.models.shufflenetv2', 'torchvision.models.segmentation', 'torchvision.models.segmentation.segmentation', 'torchvision.models._utils', 'torchvision.models.segmentation.deeplabv3', 'torchvision.models.segmentation._utils', 'torchvision.models.segmentation.fcn', 'torchvision.models.detection', 'torchvision.models.detection.faster_rcnn', 'torchvision.ops', 'torchvision.ops.boxes', 'torchvision.ops.new_empty_tensor', 'torchvision.ops.deform_conv', 'torchvision.ops.roi_align', 'torchvision.ops._utils', 'torchvision.ops.roi_pool', 'torchvision.ops.ps_roi_align', 'torchvision.ops.ps_roi_pool', 'torchvision.ops.poolers', 'torchvision.ops.feature_pyramid_network', 'torchvision.ops._register_onnx_ops', 'torch.onnx.symbolic_helper', 'torch.onnx.utils', 'torch.onnx.symbolic_opset9', 'torch.onnx.symbolic_registry', 'torch.onnx.symbolic_opset7', 'torch.onnx.symbolic_opset8', 'torch.onnx.symbolic_opset10', 'torch.onnx.symbolic_opset11', 'torch.onnx.symbolic_opset12', 'torchvision.ops.misc', 'torchvision.models.detection.generalized_rcnn', 'torchvision.models.detection.rpn', 'torchvision.models.detection._utils', 'torchvision.models.detection.image_list', 'torchvision.models.detection.roi_heads', 'torchvision.models.detection.transform', 'torchvision.models.detection.backbone_utils', 'torchvision.models.detection.mask_rcnn', 'torchvision.models.detection.keypoint_rcnn', 'torchvision.models.video', 'torchvision.models.video.resnet', 'torchvision.models.quantization', 'torchvision.models.quantization.mobilenet', 'torchvision.models.quantization.utils', 'torchvision.models.quantization.resnet', 'torchvision.models.quantization.googlenet', 'torchvision.models.quantization.inception', 'torchvision.models.quantization.shufflenetv2', 'torchvision.datasets', 'torchvision.datasets.lsun', 'torchvision.datasets.vision', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'torchvision.datasets.utils', 'gzip', 'torch.utils.model_zoo', 'torchvision.datasets.folder', 'torchvision.datasets.coco', 'torchvision.datasets.cifar', 'torchvision.datasets.stl10', 'torchvision.datasets.mnist', 'torchvision.datasets.svhn', 'torchvision.datasets.phototour', 'torchvision.datasets.fakedata', 'torchvision.transforms', 'torchvision.transforms.transforms', 'torchvision.transforms.functional', 'PIL.ImageOps', 'PIL.ImageEnhance', 'PIL.ImageFilter', 'PIL.ImageStat', 'torchvision.datasets.semeion', 'torchvision.datasets.omniglot', 'torchvision.datasets.sbu', 'torchvision.datasets.flickr', 'html', 'html.entities', 'html.parser', '_markupbase', 'glob', 'torchvision.datasets.voc', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'torchvision.datasets.cityscapes', 'torchvision.datasets.imagenet', 'torchvision.datasets.caltech', 'torchvision.datasets.celeba', 'torchvision.datasets.sbd', 'torchvision.datasets.usps', 'torchvision.datasets.kinetics', 'torchvision.datasets.video_utils', 'fractions', 'torchvision.io', 'torchvision.io._video_opt', 'torchvision.io.video', 'torchvision.datasets.hmdb51', 'torchvision.datasets.ucf101', 'torchvision.utils', 'torchvision.extension', 'torchvision.version', 'network_factory', 'backbone', 'backbone.ResNet2015', 'opt_factory', 'loss_factory', 'datasets', 'datasets.loader_factory', 'datasets.cifar', 'datasets.cub200_2011', 'test', 'config', 'utils', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'config_cub', 'backbone.RegNet2020', 'ptflops', 'ptflops.flops_counter', 'multiprocessing.queues', 'multiprocessing.synchronize', 'multiprocessing.popen_fork', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
CACHEDIR=/home/liuhaiyang/.cache/matplotlib
Using fontManager instance from /home/liuhaiyang/.cache/matplotlib/fontlist-v310.json
Loaded backend qt5agg version unknown.
Loaded backend tkagg version unknown.
Loaded backend agg version unknown.
Loaded backend agg version unknown.
findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Padauk' (Padauk-bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXGeneral' (STIXGeneral-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjoBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIX' (STIX-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
findfont: score(<Font 'Padauk Book' (Padauk-book.ttf) normal normal book normal>) = 10.05
findfont: score(<Font 'STIXGeneral' (STIXGeneral-BoldItalic.otf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
findfont: score(<Font 'NanumGothic' (NanumGothicBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Padauk Book' (Padauk-bookbold.ttf) normal normal book normal>) = 10.05
findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIX' (STIX-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal regular normal>) = 10.05
findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'TakaoPGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'STIX' (STIX-Italic.otf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXVariants' (STIXVariants-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
findfont: score(<Font 'STIXGeneral' (STIXGeneral-Italic.otf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'STIXVariants' (STIXVariants-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Padauk' (Padauk.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothic.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIX Math' (STIXMath-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
findfont: score(<Font 'NanumGothic' (NanumGothic.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjo.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Italic.otf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'STIXSizeFiveSym' (STIXSizeFiveSym-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lohit Punjabi' (Lohit-Punjabi.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXGeneral' (STIXGeneral-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothicBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-BoldItalic.otf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'STIX' (STIX-BoldItalic.otf) italic normal bold normal>) = 11.335
findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'TakaoPGothic' (TakaoPGothic.ttf) normal normal 400 normal>) = 10.05
findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/liuhaiyang/.conda/envs/ptnew/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
