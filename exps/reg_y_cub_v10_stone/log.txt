start creating config files...
update config files success
load regnet pretrain weight success
Computational complexity:       8.02 GMac
Number of parameters:           37.57 M 
no checkpoints
[0][0/750]	Loss:5.33562	Lr:0.001000	Data:1444ms	Train:0582ms	Mem:1.98Gb	Prec@1:0.0000
[0][300/750]	Loss:5.17623	Lr:0.001000	Data:0011ms	Train:0172ms	Mem:1.98Gb	Prec@1:0.0179
start loading config files...
loading config files success
change random seed success
update config files success
load regnet pretrain weight success
Computational complexity:       8.02 GMac
Number of parameters:           37.57 M 
no checkpoints
[0][0/750]	Loss:5.38761	Lr:0.001000	Data:1554ms	Train:0698ms	Mem:1.98Gb	Prec@1:0.0000
[0][300/750]	Loss:5.48300	Lr:0.001000	Data:0007ms	Train:0203ms	Mem:1.98Gb	Prec@1:0.0116
[0][600/750]	Loss:3.89816	Lr:0.001000	Data:0006ms	Train:0128ms	Mem:1.98Gb	Prec@1:0.0312
[0][0/725]	Loss:3.93178	Lr:0.000000	Data:1590ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.0000
[0][300/725]	Loss:5.18993	Lr:0.000000	Data:0052ms	Train:0049ms	Mem:1.98Gb	Prec@1:0.1973
[0][600/725]	Loss:3.72822	Lr:0.000000	Data:0097ms	Train:0015ms	Mem:1.98Gb	Prec@1:0.1839
Train Prec@1:0.0434	Val Prec@1:0.1848	Epoch Time:3.99min
BestV Prec@1:0.1848	Best Epoch:0
[1][0/750]	Loss:3.59698	Lr:0.001000	Data:1310ms	Train:0272ms	Mem:1.98Gb	Prec@1:0.1250
[1][300/750]	Loss:3.53677	Lr:0.001000	Data:0027ms	Train:0149ms	Mem:1.98Gb	Prec@1:0.1665
[1][600/750]	Loss:3.63259	Lr:0.001000	Data:0002ms	Train:0259ms	Mem:1.98Gb	Prec@1:0.1972
[1][0/725]	Loss:3.09630	Lr:0.000000	Data:1538ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.0000
[1][300/725]	Loss:2.14462	Lr:0.000000	Data:0137ms	Train:0115ms	Mem:1.98Gb	Prec@1:0.4468
[1][600/725]	Loss:2.03315	Lr:0.000000	Data:0040ms	Train:0174ms	Mem:1.98Gb	Prec@1:0.4359
Train Prec@1:0.2069	Val Prec@1:0.4531	Epoch Time:4.01min
BestV Prec@1:0.4531	Best Epoch:1
[2][0/750]	Loss:2.34277	Lr:0.001000	Data:1642ms	Train:0215ms	Mem:1.98Gb	Prec@1:0.5000
[2][300/750]	Loss:3.34617	Lr:0.001000	Data:0010ms	Train:0202ms	Mem:1.98Gb	Prec@1:0.3513
[2][600/750]	Loss:2.69445	Lr:0.001000	Data:0020ms	Train:0160ms	Mem:1.98Gb	Prec@1:0.3642
[2][0/725]	Loss:1.42933	Lr:0.000000	Data:1684ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.6250
[2][300/725]	Loss:0.23553	Lr:0.000000	Data:0010ms	Train:0166ms	Mem:1.98Gb	Prec@1:0.5851
[2][600/725]	Loss:1.63082	Lr:0.000000	Data:0046ms	Train:0058ms	Mem:1.98Gb	Prec@1:0.5668
Train Prec@1:0.3695	Val Prec@1:0.5628	Epoch Time:4.02min
BestV Prec@1:0.5628	Best Epoch:2
[3][0/750]	Loss:1.75986	Lr:0.001000	Data:1507ms	Train:0227ms	Mem:1.98Gb	Prec@1:0.5000
[3][300/750]	Loss:2.98777	Lr:0.001000	Data:0034ms	Train:0143ms	Mem:1.98Gb	Prec@1:0.4560
[3][600/750]	Loss:2.19989	Lr:0.001000	Data:0010ms	Train:0180ms	Mem:1.98Gb	Prec@1:0.4611
[3][0/725]	Loss:1.22456	Lr:0.000000	Data:1493ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.6250
[3][300/725]	Loss:0.57481	Lr:0.000000	Data:0049ms	Train:0048ms	Mem:1.98Gb	Prec@1:0.6752
[3][600/725]	Loss:1.30685	Lr:0.000000	Data:0059ms	Train:0064ms	Mem:1.98Gb	Prec@1:0.6481
Train Prec@1:0.4666	Val Prec@1:0.6579	Epoch Time:4.03min
BestV Prec@1:0.6579	Best Epoch:3
[4][0/750]	Loss:2.47086	Lr:0.001000	Data:1379ms	Train:0198ms	Mem:1.98Gb	Prec@1:0.6250
[4][300/750]	Loss:0.97671	Lr:0.001000	Data:0006ms	Train:0160ms	Mem:1.98Gb	Prec@1:0.5561
[4][600/750]	Loss:1.60309	Lr:0.001000	Data:0013ms	Train:0223ms	Mem:1.98Gb	Prec@1:0.5514
[4][0/725]	Loss:1.86015	Lr:0.000000	Data:1324ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.3750
[4][300/725]	Loss:0.03095	Lr:0.000000	Data:0016ms	Train:0064ms	Mem:1.98Gb	Prec@1:0.6678
[4][600/725]	Loss:0.67917	Lr:0.000000	Data:0044ms	Train:0112ms	Mem:1.98Gb	Prec@1:0.6666
Train Prec@1:0.5551	Val Prec@1:0.6826	Epoch Time:4.03min
BestV Prec@1:0.6826	Best Epoch:4
[5][0/750]	Loss:1.90482	Lr:0.001000	Data:1309ms	Train:0262ms	Mem:1.98Gb	Prec@1:0.5000
[5][300/750]	Loss:1.18712	Lr:0.001000	Data:0016ms	Train:0123ms	Mem:1.98Gb	Prec@1:0.6038
[5][600/750]	Loss:1.18411	Lr:0.001000	Data:0024ms	Train:0222ms	Mem:1.98Gb	Prec@1:0.5998
[5][0/725]	Loss:1.27166	Lr:0.000000	Data:1476ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.6250
[5][300/725]	Loss:0.04310	Lr:0.000000	Data:0030ms	Train:0071ms	Mem:1.98Gb	Prec@1:0.7081
[5][600/725]	Loss:0.51216	Lr:0.000000	Data:0047ms	Train:0059ms	Mem:1.98Gb	Prec@1:0.7063
Train Prec@1:0.5966	Val Prec@1:0.7171	Epoch Time:4.03min
BestV Prec@1:0.7171	Best Epoch:5
[6][0/750]	Loss:2.42403	Lr:0.001000	Data:1552ms	Train:0198ms	Mem:1.98Gb	Prec@1:0.3750
[6][300/750]	Loss:2.10741	Lr:0.001000	Data:0010ms	Train:0205ms	Mem:1.98Gb	Prec@1:0.6483
[6][600/750]	Loss:1.03315	Lr:0.001000	Data:0009ms	Train:0162ms	Mem:1.98Gb	Prec@1:0.6331
[6][0/725]	Loss:1.43939	Lr:0.000000	Data:1433ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[6][300/725]	Loss:0.08521	Lr:0.000000	Data:0040ms	Train:0015ms	Mem:1.98Gb	Prec@1:0.7463
[6][600/725]	Loss:0.50901	Lr:0.000000	Data:0014ms	Train:0192ms	Mem:1.98Gb	Prec@1:0.7338
Train Prec@1:0.6305	Val Prec@1:0.7466	Epoch Time:4.01min
BestV Prec@1:0.7466	Best Epoch:6
[7][0/750]	Loss:0.90559	Lr:0.001000	Data:1498ms	Train:0210ms	Mem:1.98Gb	Prec@1:0.6250
[7][300/750]	Loss:1.05207	Lr:0.001000	Data:0014ms	Train:0186ms	Mem:1.98Gb	Prec@1:0.6669
[7][600/750]	Loss:1.44755	Lr:0.001000	Data:0004ms	Train:0227ms	Mem:1.98Gb	Prec@1:0.6666
[7][0/725]	Loss:1.46921	Lr:0.000000	Data:1479ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[7][300/725]	Loss:0.05681	Lr:0.000000	Data:0013ms	Train:0144ms	Mem:1.98Gb	Prec@1:0.7500
[7][600/725]	Loss:0.29543	Lr:0.000000	Data:0042ms	Train:0047ms	Mem:1.98Gb	Prec@1:0.7502
Train Prec@1:0.6650	Val Prec@1:0.7616	Epoch Time:4.05min
BestV Prec@1:0.7616	Best Epoch:7
[8][0/750]	Loss:0.83858	Lr:0.001000	Data:1460ms	Train:0276ms	Mem:1.98Gb	Prec@1:0.7500
[8][300/750]	Loss:1.26912	Lr:0.001000	Data:0011ms	Train:0146ms	Mem:1.98Gb	Prec@1:0.6860
[8][600/750]	Loss:1.21583	Lr:0.001000	Data:0014ms	Train:0155ms	Mem:1.98Gb	Prec@1:0.6843
[8][0/725]	Loss:1.45258	Lr:0.000000	Data:1515ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[8][300/725]	Loss:0.00911	Lr:0.000000	Data:0063ms	Train:0062ms	Mem:1.98Gb	Prec@1:0.7645
[8][600/725]	Loss:0.05762	Lr:0.000000	Data:0051ms	Train:0128ms	Mem:1.98Gb	Prec@1:0.7504
Train Prec@1:0.6825	Val Prec@1:0.7675	Epoch Time:4.05min
BestV Prec@1:0.7675	Best Epoch:8
[9][0/750]	Loss:1.32456	Lr:0.001000	Data:1382ms	Train:0206ms	Mem:1.98Gb	Prec@1:0.6250
[9][300/750]	Loss:0.51603	Lr:0.001000	Data:0003ms	Train:0173ms	Mem:1.98Gb	Prec@1:0.7060
[9][600/750]	Loss:1.47575	Lr:0.001000	Data:0021ms	Train:0171ms	Mem:1.98Gb	Prec@1:0.7009
[9][0/725]	Loss:1.82685	Lr:0.000000	Data:1524ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.6250
[9][300/725]	Loss:0.34179	Lr:0.000000	Data:0026ms	Train:0061ms	Mem:1.98Gb	Prec@1:0.7737
[9][600/725]	Loss:0.35565	Lr:0.000000	Data:0084ms	Train:0022ms	Mem:1.98Gb	Prec@1:0.7685
Train Prec@1:0.7059	Val Prec@1:0.7810	Epoch Time:4.02min
BestV Prec@1:0.7810	Best Epoch:9
[10][0/750]	Loss:1.79476	Lr:0.001000	Data:1453ms	Train:0360ms	Mem:1.98Gb	Prec@1:0.6250
[10][300/750]	Loss:0.65329	Lr:0.001000	Data:0032ms	Train:0165ms	Mem:1.98Gb	Prec@1:0.7159
[10][600/750]	Loss:0.32957	Lr:0.001000	Data:0009ms	Train:0168ms	Mem:1.98Gb	Prec@1:0.7200
[10][0/725]	Loss:1.09287	Lr:0.000000	Data:1373ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.8750
[10][300/725]	Loss:0.00441	Lr:0.000000	Data:0072ms	Train:0079ms	Mem:1.98Gb	Prec@1:0.7733
[10][600/725]	Loss:0.60525	Lr:0.000000	Data:0051ms	Train:0099ms	Mem:1.98Gb	Prec@1:0.7573
Train Prec@1:0.7192	Val Prec@1:0.7699	Epoch Time:4.02min
BestV Prec@1:0.7810	Best Epoch:9
[11][0/750]	Loss:0.98736	Lr:0.001000	Data:1484ms	Train:0219ms	Mem:1.98Gb	Prec@1:0.8750
[11][300/750]	Loss:0.54980	Lr:0.001000	Data:0003ms	Train:0165ms	Mem:1.98Gb	Prec@1:0.7425
[11][600/750]	Loss:0.53762	Lr:0.001000	Data:0001ms	Train:0133ms	Mem:1.98Gb	Prec@1:0.7354
[11][0/725]	Loss:0.72846	Lr:0.000000	Data:1495ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.8750
[11][300/725]	Loss:0.00135	Lr:0.000000	Data:0041ms	Train:0092ms	Mem:1.98Gb	Prec@1:0.7895
[11][600/725]	Loss:0.44917	Lr:0.000000	Data:0068ms	Train:0049ms	Mem:1.98Gb	Prec@1:0.7781
Train Prec@1:0.7337	Val Prec@1:0.7912	Epoch Time:4.03min
BestV Prec@1:0.7912	Best Epoch:11
[12][0/750]	Loss:0.18998	Lr:0.001000	Data:1610ms	Train:0229ms	Mem:1.98Gb	Prec@1:1.0000
[12][300/750]	Loss:0.76028	Lr:0.001000	Data:0012ms	Train:0153ms	Mem:1.98Gb	Prec@1:0.7733
[12][600/750]	Loss:1.04651	Lr:0.001000	Data:0010ms	Train:0135ms	Mem:1.98Gb	Prec@1:0.7652
[12][0/725]	Loss:1.16995	Lr:0.000000	Data:1333ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[12][300/725]	Loss:0.00277	Lr:0.000000	Data:0029ms	Train:0059ms	Mem:1.98Gb	Prec@1:0.7890
[12][600/725]	Loss:0.36091	Lr:0.000000	Data:0043ms	Train:0116ms	Mem:1.98Gb	Prec@1:0.7698
Train Prec@1:0.7614	Val Prec@1:0.7853	Epoch Time:4.04min
BestV Prec@1:0.7912	Best Epoch:11
[13][0/750]	Loss:1.15164	Lr:0.001000	Data:1370ms	Train:0226ms	Mem:1.98Gb	Prec@1:0.6250
[13][300/750]	Loss:0.94408	Lr:0.001000	Data:0027ms	Train:0174ms	Mem:1.98Gb	Prec@1:0.7641
[13][600/750]	Loss:0.64398	Lr:0.001000	Data:0012ms	Train:0139ms	Mem:1.98Gb	Prec@1:0.7658
[13][0/725]	Loss:1.43175	Lr:0.000000	Data:1526ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[13][300/725]	Loss:0.09448	Lr:0.000000	Data:0063ms	Train:0063ms	Mem:1.98Gb	Prec@1:0.7874
[13][600/725]	Loss:0.25419	Lr:0.000000	Data:0019ms	Train:0072ms	Mem:1.98Gb	Prec@1:0.7901
Train Prec@1:0.7608	Val Prec@1:0.8029	Epoch Time:4.02min
BestV Prec@1:0.8029	Best Epoch:13
[14][0/750]	Loss:0.99171	Lr:0.001000	Data:1548ms	Train:0206ms	Mem:1.98Gb	Prec@1:0.7500
[14][300/750]	Loss:1.30137	Lr:0.001000	Data:0010ms	Train:0178ms	Mem:1.98Gb	Prec@1:0.7791
[14][600/750]	Loss:1.14150	Lr:0.001000	Data:0009ms	Train:0152ms	Mem:1.98Gb	Prec@1:0.7723
[14][0/725]	Loss:0.95000	Lr:0.000000	Data:1516ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.8750
[14][300/725]	Loss:0.04931	Lr:0.000000	Data:0029ms	Train:0082ms	Mem:1.98Gb	Prec@1:0.7878
[14][600/725]	Loss:0.09834	Lr:0.000000	Data:0047ms	Train:0031ms	Mem:1.98Gb	Prec@1:0.7937
Train Prec@1:0.7711	Val Prec@1:0.8072	Epoch Time:4.05min
BestV Prec@1:0.8072	Best Epoch:14
[15][0/750]	Loss:0.71542	Lr:0.001000	Data:1777ms	Train:0206ms	Mem:1.98Gb	Prec@1:0.8750
[15][300/750]	Loss:0.32582	Lr:0.001000	Data:0009ms	Train:0136ms	Mem:1.98Gb	Prec@1:0.7807
[15][600/750]	Loss:0.19475	Lr:0.001000	Data:0010ms	Train:0128ms	Mem:1.98Gb	Prec@1:0.7708
[15][0/725]	Loss:0.91179	Lr:0.000000	Data:1320ms	Train:0013ms	Mem:1.98Gb	Prec@1:0.8750
[15][300/725]	Loss:0.00384	Lr:0.000000	Data:0020ms	Train:0044ms	Mem:1.98Gb	Prec@1:0.8011
[15][600/725]	Loss:0.17111	Lr:0.000000	Data:0051ms	Train:0039ms	Mem:1.98Gb	Prec@1:0.7966
Train Prec@1:0.7719	Val Prec@1:0.8074	Epoch Time:4.03min
BestV Prec@1:0.8074	Best Epoch:15
[16][0/750]	Loss:0.36402	Lr:0.001000	Data:1556ms	Train:0198ms	Mem:1.98Gb	Prec@1:0.8750
[16][300/750]	Loss:0.82827	Lr:0.001000	Data:0019ms	Train:0178ms	Mem:1.98Gb	Prec@1:0.7990
[16][600/750]	Loss:0.39682	Lr:0.001000	Data:0018ms	Train:0226ms	Mem:1.98Gb	Prec@1:0.8020
[16][0/725]	Loss:1.37226	Lr:0.000000	Data:1404ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[16][300/725]	Loss:0.00105	Lr:0.000000	Data:0039ms	Train:0072ms	Mem:1.98Gb	Prec@1:0.7824
[16][600/725]	Loss:0.12527	Lr:0.000000	Data:0094ms	Train:0035ms	Mem:1.98Gb	Prec@1:0.7775
Train Prec@1:0.7978	Val Prec@1:0.7913	Epoch Time:4.05min
BestV Prec@1:0.8074	Best Epoch:15
[17][0/750]	Loss:1.04731	Lr:0.001000	Data:1552ms	Train:0195ms	Mem:1.98Gb	Prec@1:0.6250
[17][300/750]	Loss:0.24327	Lr:0.001000	Data:0017ms	Train:0163ms	Mem:1.98Gb	Prec@1:0.8131
[17][600/750]	Loss:1.00518	Lr:0.001000	Data:0009ms	Train:0138ms	Mem:1.98Gb	Prec@1:0.8035
[17][0/725]	Loss:1.39108	Lr:0.000000	Data:1470ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[17][300/725]	Loss:0.03242	Lr:0.000000	Data:0065ms	Train:0075ms	Mem:1.98Gb	Prec@1:0.7973
[17][600/725]	Loss:0.27129	Lr:0.000000	Data:0056ms	Train:0124ms	Mem:1.98Gb	Prec@1:0.7903
Train Prec@1:0.8003	Val Prec@1:0.8029	Epoch Time:4.02min
BestV Prec@1:0.8074	Best Epoch:15
[18][0/750]	Loss:0.73946	Lr:0.001000	Data:1429ms	Train:0277ms	Mem:1.98Gb	Prec@1:0.7500
[18][300/750]	Loss:0.56200	Lr:0.001000	Data:0008ms	Train:0148ms	Mem:1.98Gb	Prec@1:0.8110
[18][600/750]	Loss:1.59148	Lr:0.001000	Data:0003ms	Train:0225ms	Mem:1.98Gb	Prec@1:0.8111
[18][0/725]	Loss:1.40532	Lr:0.000000	Data:1495ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.8750
[18][300/725]	Loss:0.00069	Lr:0.000000	Data:0074ms	Train:0074ms	Mem:1.98Gb	Prec@1:0.7919
[18][600/725]	Loss:0.89417	Lr:0.000000	Data:0029ms	Train:0032ms	Mem:1.98Gb	Prec@1:0.8014
Train Prec@1:0.8078	Val Prec@1:0.8133	Epoch Time:4.01min
BestV Prec@1:0.8133	Best Epoch:18
[19][0/750]	Loss:0.23079	Lr:0.001000	Data:1696ms	Train:0211ms	Mem:1.98Gb	Prec@1:1.0000
[19][300/750]	Loss:0.12226	Lr:0.001000	Data:0002ms	Train:0155ms	Mem:1.98Gb	Prec@1:0.8098
[19][600/750]	Loss:0.63798	Lr:0.001000	Data:0036ms	Train:0236ms	Mem:1.98Gb	Prec@1:0.8087
[19][0/725]	Loss:1.50807	Lr:0.000000	Data:1675ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.8750
[19][300/725]	Loss:0.00230	Lr:0.000000	Data:0051ms	Train:0092ms	Mem:1.98Gb	Prec@1:0.7944
[19][600/725]	Loss:0.36210	Lr:0.000000	Data:0085ms	Train:0122ms	Mem:1.98Gb	Prec@1:0.7999
Train Prec@1:0.8108	Val Prec@1:0.8112	Epoch Time:4.05min
BestV Prec@1:0.8133	Best Epoch:18
[20][0/750]	Loss:1.39949	Lr:0.001000	Data:1627ms	Train:0198ms	Mem:1.98Gb	Prec@1:0.7500
[20][300/750]	Loss:0.20055	Lr:0.001000	Data:0027ms	Train:0158ms	Mem:1.98Gb	Prec@1:0.8173
[20][600/750]	Loss:0.35212	Lr:0.001000	Data:0017ms	Train:0123ms	Mem:1.98Gb	Prec@1:0.8166
[20][0/725]	Loss:2.09963	Lr:0.000000	Data:1552ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.6250
[20][300/725]	Loss:0.00062	Lr:0.000000	Data:0031ms	Train:0033ms	Mem:1.98Gb	Prec@1:0.7949
[20][600/725]	Loss:0.58908	Lr:0.000000	Data:0020ms	Train:0145ms	Mem:1.98Gb	Prec@1:0.7916
Train Prec@1:0.8170	Val Prec@1:0.8045	Epoch Time:4.01min
BestV Prec@1:0.8133	Best Epoch:18
[21][0/750]	Loss:1.34658	Lr:0.001000	Data:1427ms	Train:0267ms	Mem:1.98Gb	Prec@1:0.6250
[21][300/750]	Loss:0.74463	Lr:0.001000	Data:0001ms	Train:0154ms	Mem:1.98Gb	Prec@1:0.8301
[21][600/750]	Loss:0.31778	Lr:0.001000	Data:0031ms	Train:0247ms	Mem:1.98Gb	Prec@1:0.8245
[21][0/725]	Loss:1.78943	Lr:0.000000	Data:1389ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[21][300/725]	Loss:0.00111	Lr:0.000000	Data:0021ms	Train:0139ms	Mem:1.98Gb	Prec@1:0.7932
[21][600/725]	Loss:0.08660	Lr:0.000000	Data:0053ms	Train:0061ms	Mem:1.98Gb	Prec@1:0.7993
Train Prec@1:0.8223	Val Prec@1:0.8124	Epoch Time:4.02min
BestV Prec@1:0.8133	Best Epoch:18
[22][0/750]	Loss:0.26982	Lr:0.001000	Data:1811ms	Train:0190ms	Mem:1.98Gb	Prec@1:0.8750
[22][300/750]	Loss:0.65829	Lr:0.001000	Data:0031ms	Train:0159ms	Mem:1.98Gb	Prec@1:0.8281
[22][600/750]	Loss:0.15018	Lr:0.001000	Data:0005ms	Train:0211ms	Mem:1.98Gb	Prec@1:0.8336
[22][0/725]	Loss:1.74248	Lr:0.000000	Data:1438ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[22][300/725]	Loss:0.00335	Lr:0.000000	Data:0055ms	Train:0061ms	Mem:1.98Gb	Prec@1:0.8032
[22][600/725]	Loss:0.47811	Lr:0.000000	Data:0026ms	Train:0041ms	Mem:1.98Gb	Prec@1:0.7966
Train Prec@1:0.8333	Val Prec@1:0.8084	Epoch Time:4.00min
BestV Prec@1:0.8133	Best Epoch:18
[23][0/750]	Loss:0.09183	Lr:0.001000	Data:1556ms	Train:0265ms	Mem:1.98Gb	Prec@1:1.0000
[23][300/750]	Loss:0.52943	Lr:0.001000	Data:0010ms	Train:0165ms	Mem:1.98Gb	Prec@1:0.8459
[23][600/750]	Loss:0.43091	Lr:0.001000	Data:0007ms	Train:0144ms	Mem:1.98Gb	Prec@1:0.8421
[23][0/725]	Loss:1.05977	Lr:0.000000	Data:1464ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[23][300/725]	Loss:0.00105	Lr:0.000000	Data:0032ms	Train:0071ms	Mem:1.98Gb	Prec@1:0.7982
[23][600/725]	Loss:0.38627	Lr:0.000000	Data:0029ms	Train:0284ms	Mem:1.98Gb	Prec@1:0.7993
Train Prec@1:0.8413	Val Prec@1:0.8103	Epoch Time:4.05min
BestV Prec@1:0.8133	Best Epoch:18
[24][0/750]	Loss:0.05877	Lr:0.001000	Data:1673ms	Train:0270ms	Mem:1.98Gb	Prec@1:1.0000
[24][300/750]	Loss:1.33718	Lr:0.001000	Data:0026ms	Train:0127ms	Mem:1.98Gb	Prec@1:0.8314
[24][600/750]	Loss:1.39629	Lr:0.001000	Data:0003ms	Train:0187ms	Mem:1.98Gb	Prec@1:0.8390
[24][0/725]	Loss:0.92607	Lr:0.000000	Data:1335ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[24][300/725]	Loss:0.00345	Lr:0.000000	Data:0052ms	Train:0076ms	Mem:1.98Gb	Prec@1:0.7994
[24][600/725]	Loss:0.65352	Lr:0.000000	Data:0032ms	Train:0064ms	Mem:1.98Gb	Prec@1:0.7876
Train Prec@1:0.8390	Val Prec@1:0.7993	Epoch Time:4.03min
BestV Prec@1:0.8133	Best Epoch:18
[25][0/750]	Loss:1.00941	Lr:0.001000	Data:1538ms	Train:0236ms	Mem:1.98Gb	Prec@1:0.7500
[25][300/750]	Loss:0.16915	Lr:0.001000	Data:0019ms	Train:0148ms	Mem:1.98Gb	Prec@1:0.8355
[25][600/750]	Loss:1.26448	Lr:0.001000	Data:0022ms	Train:0196ms	Mem:1.98Gb	Prec@1:0.8347
[25][0/725]	Loss:1.51788	Lr:0.000000	Data:1869ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[25][300/725]	Loss:0.00091	Lr:0.000000	Data:0033ms	Train:0118ms	Mem:1.98Gb	Prec@1:0.8052
[25][600/725]	Loss:0.40408	Lr:0.000000	Data:0025ms	Train:0141ms	Mem:1.98Gb	Prec@1:0.8026
Train Prec@1:0.8392	Val Prec@1:0.8179	Epoch Time:4.02min
BestV Prec@1:0.8179	Best Epoch:25
[26][0/750]	Loss:0.37939	Lr:0.000100	Data:1408ms	Train:0226ms	Mem:1.98Gb	Prec@1:0.8750
[26][300/750]	Loss:0.32625	Lr:0.000100	Data:0002ms	Train:0124ms	Mem:1.98Gb	Prec@1:0.8654
[26][600/750]	Loss:0.49682	Lr:0.000100	Data:0010ms	Train:0198ms	Mem:1.98Gb	Prec@1:0.8658
[26][0/725]	Loss:1.48452	Lr:0.000000	Data:1463ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[26][300/725]	Loss:0.00150	Lr:0.000000	Data:0073ms	Train:0104ms	Mem:1.98Gb	Prec@1:0.8202
[26][600/725]	Loss:0.39618	Lr:0.000000	Data:0065ms	Train:0034ms	Mem:1.98Gb	Prec@1:0.8224
Train Prec@1:0.8690	Val Prec@1:0.8360	Epoch Time:4.03min
BestV Prec@1:0.8360	Best Epoch:26
[27][0/750]	Loss:0.41075	Lr:0.000100	Data:1643ms	Train:0295ms	Mem:1.98Gb	Prec@1:1.0000
[27][300/750]	Loss:0.11135	Lr:0.000100	Data:0019ms	Train:0129ms	Mem:1.98Gb	Prec@1:0.8924
[27][600/750]	Loss:0.23155	Lr:0.000100	Data:0016ms	Train:0157ms	Mem:1.98Gb	Prec@1:0.8883
[27][0/725]	Loss:1.50929	Lr:0.000000	Data:1586ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[27][300/725]	Loss:0.00151	Lr:0.000000	Data:0020ms	Train:0161ms	Mem:1.98Gb	Prec@1:0.8281
[27][600/725]	Loss:0.36669	Lr:0.000000	Data:0042ms	Train:0087ms	Mem:1.98Gb	Prec@1:0.8295
Train Prec@1:0.8866	Val Prec@1:0.8412	Epoch Time:4.02min
BestV Prec@1:0.8412	Best Epoch:27
[28][0/750]	Loss:0.74091	Lr:0.000100	Data:1527ms	Train:0206ms	Mem:1.98Gb	Prec@1:0.8750
[28][300/750]	Loss:0.10687	Lr:0.000100	Data:0009ms	Train:0301ms	Mem:1.98Gb	Prec@1:0.8891
[28][600/750]	Loss:0.05438	Lr:0.000100	Data:0009ms	Train:0199ms	Mem:1.98Gb	Prec@1:0.8877
[28][0/725]	Loss:1.50029	Lr:0.000000	Data:1464ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[28][300/725]	Loss:0.00192	Lr:0.000000	Data:0054ms	Train:0044ms	Mem:1.98Gb	Prec@1:0.8189
[28][600/725]	Loss:0.41087	Lr:0.000000	Data:0043ms	Train:0043ms	Mem:1.98Gb	Prec@1:0.8222
Train Prec@1:0.8856	Val Prec@1:0.8369	Epoch Time:4.01min
BestV Prec@1:0.8412	Best Epoch:27
[29][0/750]	Loss:0.04239	Lr:0.000100	Data:1662ms	Train:0207ms	Mem:1.98Gb	Prec@1:1.0000
[29][300/750]	Loss:0.56568	Lr:0.000100	Data:0018ms	Train:0125ms	Mem:1.98Gb	Prec@1:0.8846
[29][600/750]	Loss:0.09069	Lr:0.000100	Data:0003ms	Train:0156ms	Mem:1.98Gb	Prec@1:0.8837
[29][0/725]	Loss:1.29895	Lr:0.000000	Data:1494ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[29][300/725]	Loss:0.00203	Lr:0.000000	Data:0046ms	Train:0065ms	Mem:1.98Gb	Prec@1:0.8202
[29][600/725]	Loss:0.41919	Lr:0.000000	Data:0090ms	Train:0063ms	Mem:1.98Gb	Prec@1:0.8228
Train Prec@1:0.8852	Val Prec@1:0.8366	Epoch Time:4.05min
BestV Prec@1:0.8412	Best Epoch:27
[30][0/750]	Loss:0.47020	Lr:0.000100	Data:1600ms	Train:0331ms	Mem:1.98Gb	Prec@1:0.8750
[30][300/750]	Loss:0.04514	Lr:0.000100	Data:0022ms	Train:0171ms	Mem:1.98Gb	Prec@1:0.8999
[30][600/750]	Loss:0.02660	Lr:0.000100	Data:0010ms	Train:0182ms	Mem:1.98Gb	Prec@1:0.8910
[30][0/725]	Loss:1.59268	Lr:0.000000	Data:1406ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[30][300/725]	Loss:0.00359	Lr:0.000000	Data:0057ms	Train:0055ms	Mem:1.98Gb	Prec@1:0.8160
[30][600/725]	Loss:0.47444	Lr:0.000000	Data:0043ms	Train:0078ms	Mem:1.98Gb	Prec@1:0.8213
Train Prec@1:0.8917	Val Prec@1:0.8343	Epoch Time:4.03min
BestV Prec@1:0.8412	Best Epoch:27
[31][0/750]	Loss:0.80455	Lr:0.000100	Data:1292ms	Train:0218ms	Mem:1.98Gb	Prec@1:0.7500
[31][300/750]	Loss:0.47983	Lr:0.000100	Data:0010ms	Train:0138ms	Mem:1.98Gb	Prec@1:0.8941
[31][600/750]	Loss:0.21654	Lr:0.000100	Data:0014ms	Train:0159ms	Mem:1.98Gb	Prec@1:0.8964
[31][0/725]	Loss:1.29613	Lr:0.000000	Data:1495ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[31][300/725]	Loss:0.00683	Lr:0.000000	Data:0045ms	Train:0105ms	Mem:1.98Gb	Prec@1:0.8210
[31][600/725]	Loss:0.49152	Lr:0.000000	Data:0032ms	Train:0072ms	Mem:1.98Gb	Prec@1:0.8276
Train Prec@1:0.8937	Val Prec@1:0.8407	Epoch Time:4.05min
BestV Prec@1:0.8412	Best Epoch:27
[32][0/750]	Loss:0.75197	Lr:0.000100	Data:1785ms	Train:0219ms	Mem:1.98Gb	Prec@1:0.7500
[32][300/750]	Loss:0.05587	Lr:0.000100	Data:0015ms	Train:0144ms	Mem:1.98Gb	Prec@1:0.8904
[32][600/750]	Loss:0.76899	Lr:0.000100	Data:0015ms	Train:0199ms	Mem:1.98Gb	Prec@1:0.8858
[32][0/725]	Loss:1.48524	Lr:0.000000	Data:1465ms	Train:0013ms	Mem:1.98Gb	Prec@1:0.7500
[32][300/725]	Loss:0.00256	Lr:0.000000	Data:0019ms	Train:0089ms	Mem:1.98Gb	Prec@1:0.8277
[32][600/725]	Loss:0.39177	Lr:0.000000	Data:0028ms	Train:0065ms	Mem:1.98Gb	Prec@1:0.8257
Train Prec@1:0.8871	Val Prec@1:0.8402	Epoch Time:4.00min
BestV Prec@1:0.8412	Best Epoch:27
[33][0/750]	Loss:0.47696	Lr:0.000100	Data:1450ms	Train:0222ms	Mem:1.98Gb	Prec@1:0.8750
[33][300/750]	Loss:1.02491	Lr:0.000100	Data:0016ms	Train:0136ms	Mem:1.98Gb	Prec@1:0.8829
[33][600/750]	Loss:0.29678	Lr:0.000100	Data:0025ms	Train:0172ms	Mem:1.98Gb	Prec@1:0.8879
[33][0/725]	Loss:1.20544	Lr:0.000000	Data:1503ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[33][300/725]	Loss:0.00135	Lr:0.000000	Data:0038ms	Train:0128ms	Mem:1.98Gb	Prec@1:0.8227
[33][600/725]	Loss:0.40512	Lr:0.000000	Data:0050ms	Train:0128ms	Mem:1.98Gb	Prec@1:0.8267
Train Prec@1:0.8907	Val Prec@1:0.8395	Epoch Time:4.03min
BestV Prec@1:0.8412	Best Epoch:27
[34][0/750]	Loss:0.04133	Lr:0.000100	Data:1570ms	Train:0183ms	Mem:1.98Gb	Prec@1:1.0000
[34][300/750]	Loss:0.99889	Lr:0.000100	Data:0017ms	Train:0187ms	Mem:1.98Gb	Prec@1:0.8941
[34][600/750]	Loss:0.07235	Lr:0.000100	Data:0003ms	Train:0197ms	Mem:1.98Gb	Prec@1:0.8889
[34][0/725]	Loss:1.39101	Lr:0.000000	Data:1639ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[34][300/725]	Loss:0.00204	Lr:0.000000	Data:0060ms	Train:0074ms	Mem:1.98Gb	Prec@1:0.8264
[34][600/725]	Loss:0.51107	Lr:0.000000	Data:0051ms	Train:0092ms	Mem:1.98Gb	Prec@1:0.8295
Train Prec@1:0.8922	Val Prec@1:0.8414	Epoch Time:4.02min
BestV Prec@1:0.8414	Best Epoch:34
[35][0/750]	Loss:0.12848	Lr:0.000100	Data:1357ms	Train:0274ms	Mem:1.98Gb	Prec@1:1.0000
[35][300/750]	Loss:0.08043	Lr:0.000100	Data:0010ms	Train:0182ms	Mem:1.98Gb	Prec@1:0.8995
[35][600/750]	Loss:0.47439	Lr:0.000100	Data:0015ms	Train:0131ms	Mem:1.98Gb	Prec@1:0.9016
[35][0/725]	Loss:1.48388	Lr:0.000000	Data:1460ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[35][300/725]	Loss:0.00116	Lr:0.000000	Data:0073ms	Train:0059ms	Mem:1.98Gb	Prec@1:0.8301
[35][600/725]	Loss:0.43723	Lr:0.000000	Data:0049ms	Train:0104ms	Mem:1.98Gb	Prec@1:0.8322
Train Prec@1:0.9016	Val Prec@1:0.8440	Epoch Time:4.04min
BestV Prec@1:0.8440	Best Epoch:35
[36][0/750]	Loss:1.21193	Lr:0.000010	Data:1678ms	Train:0219ms	Mem:1.98Gb	Prec@1:0.8750
[36][300/750]	Loss:0.08488	Lr:0.000010	Data:0017ms	Train:0132ms	Mem:1.98Gb	Prec@1:0.8908
[36][600/750]	Loss:0.07157	Lr:0.000010	Data:0013ms	Train:0189ms	Mem:1.98Gb	Prec@1:0.8929
[36][0/725]	Loss:1.39885	Lr:0.000000	Data:1558ms	Train:0016ms	Mem:1.98Gb	Prec@1:0.7500
[36][300/725]	Loss:0.00158	Lr:0.000000	Data:0074ms	Train:0074ms	Mem:1.98Gb	Prec@1:0.8277
[36][600/725]	Loss:0.50193	Lr:0.000000	Data:0063ms	Train:0136ms	Mem:1.98Gb	Prec@1:0.8303
Train Prec@1:0.8881	Val Prec@1:0.8435	Epoch Time:4.04min
BestV Prec@1:0.8440	Best Epoch:35
[37][0/750]	Loss:0.11461	Lr:0.000010	Data:1133ms	Train:0214ms	Mem:1.98Gb	Prec@1:1.0000
[37][300/750]	Loss:0.06682	Lr:0.000010	Data:0002ms	Train:0158ms	Mem:1.98Gb	Prec@1:0.8978
[37][600/750]	Loss:0.98193	Lr:0.000010	Data:0016ms	Train:0159ms	Mem:1.98Gb	Prec@1:0.9018
[37][0/725]	Loss:1.43914	Lr:0.000000	Data:1414ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[37][300/725]	Loss:0.00297	Lr:0.000000	Data:0004ms	Train:0084ms	Mem:1.98Gb	Prec@1:0.8235
[37][600/725]	Loss:0.29738	Lr:0.000000	Data:0033ms	Train:0061ms	Mem:1.98Gb	Prec@1:0.8265
Train Prec@1:0.9004	Val Prec@1:0.8385	Epoch Time:4.02min
BestV Prec@1:0.8440	Best Epoch:35
[38][0/750]	Loss:0.76802	Lr:0.000010	Data:1745ms	Train:0183ms	Mem:1.98Gb	Prec@1:0.7500
[38][300/750]	Loss:0.84224	Lr:0.000010	Data:0001ms	Train:0123ms	Mem:1.98Gb	Prec@1:0.8966
[38][600/750]	Loss:0.00814	Lr:0.000010	Data:0022ms	Train:0226ms	Mem:1.98Gb	Prec@1:0.8921
[38][0/725]	Loss:1.42944	Lr:0.000000	Data:1329ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[38][300/725]	Loss:0.00241	Lr:0.000000	Data:0041ms	Train:0102ms	Mem:1.98Gb	Prec@1:0.8227
[38][600/725]	Loss:0.43105	Lr:0.000000	Data:0068ms	Train:0085ms	Mem:1.98Gb	Prec@1:0.8288
Train Prec@1:0.8904	Val Prec@1:0.8416	Epoch Time:4.03min
BestV Prec@1:0.8440	Best Epoch:35
[39][0/750]	Loss:0.39252	Lr:0.000010	Data:1594ms	Train:0187ms	Mem:1.98Gb	Prec@1:0.8750
[39][300/750]	Loss:0.80634	Lr:0.000010	Data:0017ms	Train:0129ms	Mem:1.98Gb	Prec@1:0.8983
[39][600/750]	Loss:0.02877	Lr:0.000010	Data:0005ms	Train:0128ms	Mem:1.98Gb	Prec@1:0.9022
[39][0/725]	Loss:1.46266	Lr:0.000000	Data:1490ms	Train:0012ms	Mem:1.98Gb	Prec@1:0.7500
[39][300/725]	Loss:0.00230	Lr:0.000000	Data:0041ms	Train:0047ms	Mem:1.98Gb	Prec@1:0.8256
[39][600/725]	Loss:0.50153	Lr:0.000000	Data:0054ms	Train:0122ms	Mem:1.98Gb	Prec@1:0.8313
Train Prec@1:0.9017	Val Prec@1:0.8429	Epoch Time:4.03min
BestV Prec@1:0.8440	Best Epoch:35
CONFIGDIR=/home/liuhaiyang/.config/matplotlib
(private) matplotlib data path: /home/liuhaiyang/.conda/envs/ptnew/lib/python3.7/site-packages/matplotlib/mpl-data
matplotlib data path: /home/liuhaiyang/.conda/envs/ptnew/lib/python3.7/site-packages/matplotlib/mpl-data
loaded rc file /home/liuhaiyang/.conda/envs/ptnew/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
matplotlib version 3.2.1
interactive is False
platform is linux
loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', '_collections_abc', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', '_bootlocale', '_locale', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'google', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'numpy', '__future__', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'mkl', 'ctypes', '_ctypes', 'struct', '_struct', 'ctypes._endian', 'mkl._mklinit', 'mkl._py_mkl_service', 'cython_runtime', 'six', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'datetime', 'time', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'fnmatch', 'ntpath', 'errno', 'urllib', 'urllib.parse', 'pickle', '_compat_pickle', '_pickle', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'collections.abc', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'subprocess', 'signal', '_posixsubprocess', 'select', 'selectors', 'threading', 'traceback', 'linecache', 'tokenize', 'token', '_weakrefset', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'ast', '_ast', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'weakref', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'numpy.lib._iotools', 'numpy.lib.financial', 'decimal', '_decimal', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_14', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'cv2', 'cv2.Error', 'cv2.aruco', 'cv2.bgsegm', 'cv2.bioinspired', 'cv2.cuda', 'cv2.datasets', 'cv2.detail', 'cv2.dnn', 'cv2.face', 'cv2.fisheye', 'cv2.flann', 'cv2.freetype', 'cv2.ft', 'cv2.hdf', 'cv2.hfs', 'cv2.img_hash', 'cv2.instr', 'cv2.ipp', 'cv2.line_descriptor', 'cv2.linemod', 'cv2.ml', 'cv2.motempl', 'cv2.multicalib', 'cv2.ocl', 'cv2.ogl', 'cv2.omnidir', 'cv2.optflow', 'cv2.plot', 'cv2.ppf_match_3d', 'cv2.reg', 'cv2.rgbd', 'cv2.saliency', 'cv2.structured_light', 'cv2.text', 'cv2.videostab', 'cv2.xfeatures2d', 'cv2.ximgproc', 'cv2.ximgproc.segmentation', 'cv2.xphoto', 'torch', 'torch._utils', 'torch._utils_internal', 'inspect', 'dis', 'opcode', '_opcode', 'torch.version', 'torch._six', 'queue', '_queue', 'torch._C._onnx', 'torch._C._jit_tree_views', 'torch._C.cpp', 'torch._C.cpp.nn', 'torch._C._cudart', 'torch._C._nvtx', 'torch._C._cudnn', 'torch._C', 'torch.random', 'torch.serialization', 'difflib', 'tarfile', 'copy', 'tempfile', 'torch._tensor_str', 'torch.tensor', 'torch._namedtensor_internals', 'torch.utils', 'torch.utils.throughput_benchmark', 'torch.utils.hooks', 'torch.storage', 'torch.cuda', 'torch.cuda._utils', 'torch.cuda.memory', 'torch.cuda.random', 'torch.cuda.sparse', 'torch.cuda.profiler', 'torch.cuda.nvtx', 'torch.cuda.streams', 'torch.cuda.amp', 'torch.cuda.amp.grad_scaler', 'torch.sparse', 'torch.functional', 'torch.nn', 'torch.nn.modules', 'torch.nn.modules.module', 'torch.nn.parameter', 'torch.nn.modules.linear', 'torch.nn.functional', 'torch.nn._reduction', 'torch.nn.modules.utils', 'torch.nn.grad', 'torch._VF', 'torch._jit_internal', 'typing', 'typing.io', 'typing.re', 'torch._overrides', 'torch.nn.init', 'torch.nn.modules.conv', 'torch.nn.modules.activation', 'torch.nn.modules.loss', 'torch.nn.modules.container', 'torch.nn.modules.pooling', 'torch.nn.modules.batchnorm', 'torch.nn.modules._functions', 'torch.autograd', 'torch.autograd.variable', 'torch.autograd.function', 'torch.autograd.gradcheck', 'torch.testing', 'torch.autograd.grad_mode', 'torch.autograd.anomaly_mode', 'torch.autograd.profiler', 'torch.autograd.functional', 'torch.nn.modules.instancenorm', 'torch.nn.modules.normalization', 'torch.nn.modules.dropout', 'torch.nn.modules.padding', 'torch.nn.modules.sparse', 'torch.nn.modules.rnn', 'torch.nn.utils', 'torch.nn.utils.rnn', 'torch.nn.utils.clip_grad', 'torch.nn.utils.weight_norm', 'torch.nn.utils.convert_parameters', 'torch.nn.utils.spectral_norm', 'torch.nn.utils.fusion', 'torch.nn.utils.memory_format', 'torch.nn.modules.pixelshuffle', 'torch.nn.modules.upsampling', 'torch.nn.modules.distance', 'torch.nn.modules.fold', 'torch.nn.modules.adaptive', 'torch.nn.modules.transformer', 'torch.nn.modules.flatten', 'torch.nn.parallel', 'torch.nn.parallel.parallel_apply', 'torch.nn.parallel.replicate', 'torch.cuda.comm', 'torch.cuda.nccl', 'torch.nn.parallel.data_parallel', 'torch.nn.parallel.scatter_gather', 'torch.nn.parallel._functions', 'torch.nn.parallel.distributed', 'torch.distributed', 'torch.distributed.distributed_c10d', 'torch.distributed.constants', 'torch.distributed.rendezvous', 'torch._lowrank', 'torch._linalg_utils', 'torch.nn.intrinsic', 'torch.nn.intrinsic.modules', 'torch.nn.intrinsic.modules.fused', 'torch.nn.quantized', 'torch.nn.quantized.modules', 'torch.nn.quantized.modules.activation', 'torch.nn.quantized.functional', 'torch.nn.quantized.modules.batchnorm', 'torch.nn.quantized.modules.conv', 'torch.nn.intrinsic.qat', 'torch.nn.intrinsic.qat.modules', 'torch.nn.intrinsic.qat.modules.linear_relu', 'torch.nn.qat', 'torch.nn.qat.modules', 'torch.nn.qat.modules.linear', 'torch.nn.qat.modules.conv', 'torch.nn.intrinsic.qat.modules.conv_fused', 'torch._ops', 'torch.jit', 'torch.jit.annotations', 'torch.jit._recursive', 'torch.jit.frontend', 'string', '_string', 'torch.jit._builtins', 'torch.backends', 'torch.backends.cudnn', 'torch.distributed.autograd', 'torch.nn.quantized.modules.utils', 'torch.nn.quantized.modules.linear', 'torch.nn.quantized.modules.functional_modules', 'torch.optim', 'torch.optim.adadelta', 'torch.optim.optimizer', 'torch.optim.adagrad', 'torch.optim.adam', 'torch.optim.adamw', 'torch.optim.sparse_adam', 'torch.optim.adamax', 'torch.optim.asgd', 'torch.optim.sgd', 'torch.optim.rprop', 'torch.optim.rmsprop', 'torch.optim.lbfgs', 'torch.optim.lr_scheduler', 'torch.multiprocessing', 'torch.multiprocessing.reductions', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.util', 'atexit', 'multiprocessing.resource_sharer', 'torch.multiprocessing.spawn', 'multiprocessing.connection', '_multiprocessing', 'torch.utils.backcompat', 'torch.onnx', 'torch.hub', 'zipfile', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'locale', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', '_ssl', 'urllib.error', 'urllib.response', 'torch.distributions', 'torch.distributions.bernoulli', 'torch.distributions.constraints', 'torch.distributions.exp_family', 'torch.distributions.distribution', 'torch.distributions.utils', 'torch.distributions.beta', 'torch.distributions.dirichlet', 'torch.distributions.binomial', 'torch.distributions.categorical', 'torch.distributions.cauchy', 'torch.distributions.chi2', 'torch.distributions.gamma', 'torch.distributions.constraint_registry', 'torch.distributions.transforms', 'torch.distributions.continuous_bernoulli', 'torch.distributions.exponential', 'torch.distributions.fishersnedecor', 'torch.distributions.geometric', 'torch.distributions.gumbel', 'torch.distributions.uniform', 'torch.distributions.transformed_distribution', 'torch.distributions.half_cauchy', 'torch.distributions.half_normal', 'torch.distributions.normal', 'torch.distributions.independent', 'torch.distributions.kl', 'torch.distributions.laplace', 'torch.distributions.lowrank_multivariate_normal', 'torch.distributions.multivariate_normal', 'torch.distributions.one_hot_categorical', 'torch.distributions.pareto', 'torch.distributions.poisson', 'torch.distributions.log_normal', 'torch.distributions.logistic_normal', 'torch.distributions.mixture_same_family', 'torch.distributions.multinomial', 'torch.distributions.negative_binomial', 'torch.distributions.relaxed_bernoulli', 'torch.distributions.relaxed_categorical', 'torch.distributions.studentT', 'torch.distributions.von_mises', 'torch.distributed.rpc', 'torch.distributed.rpc.api', 'logging', 'torch.distributed.rpc.backend_registry', 'torch.distributed.rpc.constants', 'torch.distributed.rpc.internal', 'torch.distributions.weibull', 'torch.backends.cuda', 'torch.backends.mkl', 'torch.backends.mkldnn', 'torch.backends.openmp', 'torch.backends.quantized', 'torch.quantization', 'torch.quantization.quantize', 'torch.quantization.default_mappings', 'torch.nn.intrinsic.quantized', 'torch.nn.intrinsic.quantized.modules', 'torch.nn.intrinsic.quantized.modules.linear_relu', 'torch.nn.intrinsic.quantized.modules.conv_relu', 'torch.nn.quantized.dynamic', 'torch.nn.quantized.dynamic.modules', 'torch.nn.quantized.dynamic.modules.linear', 'torch.nn.quantized.dynamic.modules.rnn', 'torch.quantization.stubs', 'torch.quantization.qconfig', 'torch.quantization.observer', 'torch.quantization.fake_quantize', 'torch.quantization.fuse_modules', 'torch.utils.data', 'torch.utils.data.sampler', 'torch.utils.data.distributed', 'torch.utils.data.dataset', 'torch.utils.data.dataloader', 'torch.utils.data._utils', 'torch.utils.data._utils.worker', 'torch.utils.data._utils.signal_handling', 'torch.utils.data._utils.pin_memory', 'torch.utils.data._utils.collate', 'torch.utils.data._utils.fetch', 'torch.__config__', 'torch.__future__', 'torch._torch_docs', 'torch._tensor_docs', 'torch._storage_docs', 'torch._classes', 'torch.quasirandom', 'torch.multiprocessing._atfork', 'torch._lobpcg', 'tensorboardX', 'tensorboardX.record_writer', 'tensorboardX.crc32c', 'tensorboardX.torchvis', 'gc', 'tensorboardX.writer', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'tensorboardX.embedding', 'tensorboardX.event_file_writer', 'tensorboardX.proto', 'tensorboardX.proto.event_pb2', 'google.protobuf', 'pkg_resources', 'pkgutil', 'plistlib', 'xml', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.py31compat', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'sysconfig', 'google.protobuf.descriptor', 'google.protobuf.internal', 'google.protobuf.internal.api_implementation', 'google.protobuf.internal._api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.containers', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.reflection', 'google.protobuf.message_factory', 'google.protobuf.descriptor_pool', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.pyext.cpp_message', 'google.protobuf.symbol_database', 'tensorboardX.proto.summary_pb2', 'tensorboardX.proto.tensor_pb2', 'tensorboardX.proto.resource_handle_pb2', 'google.protobuf.internal.well_known_types', 'tensorboardX.proto.tensor_shape_pb2', 'tensorboardX.proto.types_pb2', 'tensorboardX.onnx_graph', 'tensorboardX.proto.graph_pb2', 'tensorboardX.proto.node_def_pb2', 'tensorboardX.proto.attr_value_pb2', 'tensorboardX.proto.versions_pb2', 'tensorboardX.openvino_graph', 'tensorboardX.pytorch_graph', 'tensorboardX.proto.step_stats_pb2', 'tensorboardX.proto_graph', 'tensorboardX.utils', 'tensorboardX.summary', 'six.moves', 'tensorboardX.proto.plugin_pr_curve_pb2', 'tensorboardX.proto.plugin_text_pb2', 'tensorboardX.proto.plugin_mesh_pb2', 'tensorboardX.proto.layout_pb2', 'tensorboardX.x2num', 'tensorboardX.visdom_writer', 'easydict', 'torchvision', 'torchvision.models', 'torchvision.models.alexnet', 'torchvision.models.utils', 'torchvision.models.resnet', 'torchvision.models.vgg', 'torchvision.models.squeezenet', 'torchvision.models.inception', 'torchvision.models.densenet', 'torch.utils.checkpoint', 'torchvision.models.googlenet', 'torchvision.models.mobilenet', 'torchvision.models.mnasnet', 'torchvision.models.shufflenetv2', 'torchvision.models.segmentation', 'torchvision.models.segmentation.segmentation', 'torchvision.models._utils', 'torchvision.models.segmentation.deeplabv3', 'torchvision.models.segmentation._utils', 'torchvision.models.segmentation.fcn', 'torchvision.models.detection', 'torchvision.models.detection.faster_rcnn', 'torchvision.ops', 'torchvision.ops.boxes', 'torchvision.ops.new_empty_tensor', 'torchvision.ops.deform_conv', 'torchvision.ops.roi_align', 'torchvision.ops._utils', 'torchvision.ops.roi_pool', 'torchvision.ops.ps_roi_align', 'torchvision.ops.ps_roi_pool', 'torchvision.ops.poolers', 'torchvision.ops.feature_pyramid_network', 'torchvision.ops._register_onnx_ops', 'torch.onnx.symbolic_helper', 'torch.onnx.utils', 'torch.onnx.symbolic_opset9', 'torch.onnx.symbolic_registry', 'torch.onnx.symbolic_opset7', 'torch.onnx.symbolic_opset8', 'torch.onnx.symbolic_opset10', 'torch.onnx.symbolic_opset11', 'torch.onnx.symbolic_opset12', 'torchvision.ops.misc', 'torchvision.models.detection.generalized_rcnn', 'torchvision.models.detection.rpn', 'torchvision.models.detection._utils', 'torchvision.models.detection.image_list', 'torchvision.models.detection.roi_heads', 'torchvision.models.detection.transform', 'torchvision.models.detection.backbone_utils', 'torchvision.models.detection.mask_rcnn', 'torchvision.models.detection.keypoint_rcnn', 'torchvision.models.video', 'torchvision.models.video.resnet', 'torchvision.models.quantization', 'torchvision.models.quantization.mobilenet', 'torchvision.models.quantization.utils', 'torchvision.models.quantization.resnet', 'torchvision.models.quantization.googlenet', 'torchvision.models.quantization.inception', 'torchvision.models.quantization.shufflenetv2', 'torchvision.datasets', 'torchvision.datasets.lsun', 'torchvision.datasets.vision', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'torchvision.datasets.utils', 'gzip', 'torch.utils.model_zoo', 'torchvision.datasets.folder', 'torchvision.datasets.coco', 'torchvision.datasets.cifar', 'torchvision.datasets.stl10', 'torchvision.datasets.mnist', 'torchvision.datasets.svhn', 'torchvision.datasets.phototour', 'torchvision.datasets.fakedata', 'torchvision.transforms', 'torchvision.transforms.transforms', 'torchvision.transforms.functional', 'PIL.ImageOps', 'PIL.ImageEnhance', 'PIL.ImageFilter', 'PIL.ImageStat', 'torchvision.datasets.semeion', 'torchvision.datasets.omniglot', 'torchvision.datasets.sbu', 'torchvision.datasets.flickr', 'html', 'html.entities', 'html.parser', '_markupbase', 'glob', 'torchvision.datasets.voc', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'torchvision.datasets.cityscapes', 'torchvision.datasets.imagenet', 'torchvision.datasets.caltech', 'torchvision.datasets.celeba', 'torchvision.datasets.sbd', 'torchvision.datasets.usps', 'torchvision.datasets.kinetics', 'torchvision.datasets.video_utils', 'fractions', 'torchvision.io', 'torchvision.io._video_opt', 'torchvision.io.video', 'torchvision.datasets.hmdb51', 'torchvision.datasets.ucf101', 'torchvision.utils', 'torchvision.extension', 'torchvision.version', 'network_factory', 'backbone', 'backbone.ResNet2015', 'backbone.RegNet2020', 'opt_factory', 'loss_factory', 'datasets', 'datasets.loader_factory', 'datasets.cifar', 'datasets.cub200_2011', 'test', 'config', 'utils', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'config_cub', 'ptflops', 'ptflops.flops_counter', 'multiprocessing.queues', 'multiprocessing.synchronize', 'multiprocessing.popen_fork', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
CACHEDIR=/home/liuhaiyang/.cache/matplotlib
Using fontManager instance from /home/liuhaiyang/.cache/matplotlib/fontlist-v310.json
Loaded backend qt5agg version unknown.
Loaded backend tkagg version unknown.
Loaded backend agg version unknown.
Loaded backend agg version unknown.
findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Padauk' (Padauk-bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXGeneral' (STIXGeneral-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjoBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIX' (STIX-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
findfont: score(<Font 'Padauk Book' (Padauk-book.ttf) normal normal book normal>) = 10.05
findfont: score(<Font 'STIXGeneral' (STIXGeneral-BoldItalic.otf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
findfont: score(<Font 'NanumGothic' (NanumGothicBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Padauk Book' (Padauk-bookbold.ttf) normal normal book normal>) = 10.05
findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIX' (STIX-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal regular normal>) = 10.05
findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'TakaoPGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'STIX' (STIX-Italic.otf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXVariants' (STIXVariants-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
findfont: score(<Font 'STIXGeneral' (STIXGeneral-Italic.otf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'STIXVariants' (STIXVariants-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Padauk' (Padauk.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothic.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIX Math' (STIXMath-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
findfont: score(<Font 'NanumGothic' (NanumGothic.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjo.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Italic.otf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'STIXSizeFiveSym' (STIXSizeFiveSym-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lohit Punjabi' (Lohit-Punjabi.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXGeneral' (STIXGeneral-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothicBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-BoldItalic.otf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'STIX' (STIX-BoldItalic.otf) italic normal bold normal>) = 11.335
findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'TakaoPGothic' (TakaoPGothic.ttf) normal normal 400 normal>) = 10.05
findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/liuhaiyang/.conda/envs/ptnew/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
