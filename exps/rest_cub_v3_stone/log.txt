start creating config files...
update config files success
load resnext pretrain weight success
Computational complexity:       4.27 GMac
Number of parameters:           23.39 M 
no checkpoints
[0][0/750]	Loss:5.28249	Lr:0.001000	Data:1381ms	Train:0504ms	Mem:1.22Gb	Prec@1:0.0000
[0][300/750]	Loss:4.71996	Lr:0.001000	Data:0015ms	Train:0247ms	Mem:1.31Gb	Prec@1:0.0237
[0][600/750]	Loss:4.12792	Lr:0.001000	Data:0010ms	Train:0098ms	Mem:1.31Gb	Prec@1:0.0555
[0][0/725]	Loss:2.06687	Lr:0.000000	Data:1401ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[0][300/725]	Loss:3.36311	Lr:0.000000	Data:0046ms	Train:0051ms	Mem:1.32Gb	Prec@1:0.3393
[0][600/725]	Loss:3.40236	Lr:0.000000	Data:0032ms	Train:0052ms	Mem:1.32Gb	Prec@1:0.2768
Train Prec@1:0.0687	Val Prec@1:0.2692	Epoch Time:3.31min
BestV Prec@1:0.2692	Best Epoch:0
[1][0/750]	Loss:3.30751	Lr:0.001000	Data:1570ms	Train:0128ms	Mem:1.32Gb	Prec@1:0.2500
[1][300/750]	Loss:3.55681	Lr:0.001000	Data:0022ms	Train:0121ms	Mem:1.32Gb	Prec@1:0.2072
[1][600/750]	Loss:2.65163	Lr:0.001000	Data:0014ms	Train:0189ms	Mem:1.32Gb	Prec@1:0.2365
[1][0/725]	Loss:1.86041	Lr:0.000000	Data:1407ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.5000
[1][300/725]	Loss:0.72629	Lr:0.000000	Data:0036ms	Train:0049ms	Mem:1.32Gb	Prec@1:0.5523
[1][600/725]	Loss:2.19499	Lr:0.000000	Data:0012ms	Train:0194ms	Mem:1.32Gb	Prec@1:0.4952
Train Prec@1:0.2548	Val Prec@1:0.5007	Epoch Time:3.25min
BestV Prec@1:0.5007	Best Epoch:1
[2][0/750]	Loss:2.86959	Lr:0.001000	Data:1607ms	Train:0208ms	Mem:1.32Gb	Prec@1:0.5000
[2][300/750]	Loss:2.60669	Lr:0.001000	Data:0017ms	Train:0114ms	Mem:1.32Gb	Prec@1:0.3667
[2][600/750]	Loss:2.47824	Lr:0.001000	Data:0012ms	Train:0166ms	Mem:1.32Gb	Prec@1:0.3860
[2][0/725]	Loss:1.28250	Lr:0.000000	Data:1336ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.5000
[2][300/725]	Loss:0.15683	Lr:0.000000	Data:0038ms	Train:0008ms	Mem:1.32Gb	Prec@1:0.6466
[2][600/725]	Loss:0.62498	Lr:0.000000	Data:0054ms	Train:0077ms	Mem:1.32Gb	Prec@1:0.5909
Train Prec@1:0.3889	Val Prec@1:0.5944	Epoch Time:3.24min
BestV Prec@1:0.5944	Best Epoch:2
[3][0/750]	Loss:1.76074	Lr:0.001000	Data:1589ms	Train:0136ms	Mem:1.32Gb	Prec@1:0.6250
[3][300/750]	Loss:2.28540	Lr:0.001000	Data:0029ms	Train:0159ms	Mem:1.32Gb	Prec@1:0.4551
[3][600/750]	Loss:1.98954	Lr:0.001000	Data:0008ms	Train:0107ms	Mem:1.32Gb	Prec@1:0.4642
[3][0/725]	Loss:1.78151	Lr:0.000000	Data:1376ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[3][300/725]	Loss:0.05842	Lr:0.000000	Data:0072ms	Train:0041ms	Mem:1.32Gb	Prec@1:0.6495
[3][600/725]	Loss:0.68931	Lr:0.000000	Data:0023ms	Train:0110ms	Mem:1.32Gb	Prec@1:0.6325
Train Prec@1:0.4718	Val Prec@1:0.6464	Epoch Time:3.24min
BestV Prec@1:0.6464	Best Epoch:3
[4][0/750]	Loss:3.03962	Lr:0.001000	Data:1481ms	Train:0144ms	Mem:1.32Gb	Prec@1:0.5000
[4][300/750]	Loss:2.85413	Lr:0.001000	Data:0035ms	Train:0155ms	Mem:1.32Gb	Prec@1:0.5374
[4][600/750]	Loss:1.35011	Lr:0.001000	Data:0009ms	Train:0164ms	Mem:1.32Gb	Prec@1:0.5445
[4][0/725]	Loss:0.94746	Lr:0.000000	Data:1436ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.7500
[4][300/725]	Loss:0.03322	Lr:0.000000	Data:0036ms	Train:0124ms	Mem:1.32Gb	Prec@1:0.7072
[4][600/725]	Loss:0.49902	Lr:0.000000	Data:0038ms	Train:0008ms	Mem:1.32Gb	Prec@1:0.6855
Train Prec@1:0.5430	Val Prec@1:0.6949	Epoch Time:3.29min
BestV Prec@1:0.6949	Best Epoch:4
[5][0/750]	Loss:1.71189	Lr:0.001000	Data:1259ms	Train:0159ms	Mem:1.32Gb	Prec@1:0.5000
[5][300/750]	Loss:1.47901	Lr:0.001000	Data:0023ms	Train:0168ms	Mem:1.32Gb	Prec@1:0.5909
[5][600/750]	Loss:2.26776	Lr:0.001000	Data:0011ms	Train:0129ms	Mem:1.32Gb	Prec@1:0.5809
[5][0/725]	Loss:1.01196	Lr:0.000000	Data:1312ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.7500
[5][300/725]	Loss:0.01354	Lr:0.000000	Data:0044ms	Train:0095ms	Mem:1.32Gb	Prec@1:0.7097
[5][600/725]	Loss:0.31897	Lr:0.000000	Data:0044ms	Train:0051ms	Mem:1.32Gb	Prec@1:0.7011
Train Prec@1:0.5854	Val Prec@1:0.7132	Epoch Time:3.24min
BestV Prec@1:0.7132	Best Epoch:5
[6][0/750]	Loss:1.51510	Lr:0.001000	Data:1285ms	Train:0124ms	Mem:1.32Gb	Prec@1:0.6250
[6][300/750]	Loss:1.29860	Lr:0.001000	Data:0011ms	Train:0160ms	Mem:1.32Gb	Prec@1:0.6258
[6][600/750]	Loss:1.45618	Lr:0.001000	Data:0038ms	Train:0134ms	Mem:1.32Gb	Prec@1:0.6188
[6][0/725]	Loss:1.36508	Lr:0.000000	Data:1407ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[6][300/725]	Loss:0.08553	Lr:0.000000	Data:0034ms	Train:0038ms	Mem:1.32Gb	Prec@1:0.7180
[6][600/725]	Loss:0.32868	Lr:0.000000	Data:0043ms	Train:0075ms	Mem:1.32Gb	Prec@1:0.7138
Train Prec@1:0.6203	Val Prec@1:0.7175	Epoch Time:3.26min
BestV Prec@1:0.7175	Best Epoch:6
[7][0/750]	Loss:1.15197	Lr:0.001000	Data:1304ms	Train:0146ms	Mem:1.32Gb	Prec@1:0.6250
[7][300/750]	Loss:0.63061	Lr:0.001000	Data:0008ms	Train:0106ms	Mem:1.32Gb	Prec@1:0.6491
[7][600/750]	Loss:1.17389	Lr:0.001000	Data:0007ms	Train:0097ms	Mem:1.32Gb	Prec@1:0.6508
[7][0/725]	Loss:1.46245	Lr:0.000000	Data:1589ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.7500
[7][300/725]	Loss:0.03346	Lr:0.000000	Data:0039ms	Train:0203ms	Mem:1.32Gb	Prec@1:0.7305
[7][600/725]	Loss:0.26258	Lr:0.000000	Data:0008ms	Train:0140ms	Mem:1.32Gb	Prec@1:0.7280
Train Prec@1:0.6486	Val Prec@1:0.7352	Epoch Time:3.27min
BestV Prec@1:0.7352	Best Epoch:7
[8][0/750]	Loss:1.36141	Lr:0.001000	Data:1369ms	Train:0140ms	Mem:1.32Gb	Prec@1:0.5000
[8][300/750]	Loss:1.77540	Lr:0.001000	Data:0008ms	Train:0106ms	Mem:1.32Gb	Prec@1:0.6852
[8][600/750]	Loss:0.86879	Lr:0.001000	Data:0013ms	Train:0138ms	Mem:1.32Gb	Prec@1:0.6787
[8][0/725]	Loss:2.11324	Lr:0.000000	Data:1463ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.5000
[8][300/725]	Loss:0.12880	Lr:0.000000	Data:0039ms	Train:0062ms	Mem:1.32Gb	Prec@1:0.7492
[8][600/725]	Loss:0.37940	Lr:0.000000	Data:0017ms	Train:0029ms	Mem:1.32Gb	Prec@1:0.7500
Train Prec@1:0.6703	Val Prec@1:0.7523	Epoch Time:3.27min
BestV Prec@1:0.7523	Best Epoch:8
[9][0/750]	Loss:0.82547	Lr:0.001000	Data:1541ms	Train:0148ms	Mem:1.32Gb	Prec@1:0.8750
[9][300/750]	Loss:1.74424	Lr:0.001000	Data:0004ms	Train:0093ms	Mem:1.32Gb	Prec@1:0.6919
[9][600/750]	Loss:0.89259	Lr:0.001000	Data:0004ms	Train:0107ms	Mem:1.32Gb	Prec@1:0.6905
[9][0/725]	Loss:1.62930	Lr:0.000000	Data:1379ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[9][300/725]	Loss:0.02226	Lr:0.000000	Data:0035ms	Train:0105ms	Mem:1.32Gb	Prec@1:0.7608
[9][600/725]	Loss:0.59438	Lr:0.000000	Data:0016ms	Train:0020ms	Mem:1.32Gb	Prec@1:0.7471
Train Prec@1:0.6872	Val Prec@1:0.7582	Epoch Time:3.27min
BestV Prec@1:0.7582	Best Epoch:9
[10][0/750]	Loss:0.15795	Lr:0.001000	Data:1435ms	Train:0140ms	Mem:1.32Gb	Prec@1:1.0000
[10][300/750]	Loss:0.61654	Lr:0.001000	Data:0009ms	Train:0142ms	Mem:1.32Gb	Prec@1:0.7047
[10][600/750]	Loss:0.78699	Lr:0.001000	Data:0010ms	Train:0126ms	Mem:1.32Gb	Prec@1:0.6993
[10][0/725]	Loss:0.81841	Lr:0.000000	Data:1381ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.8750
[10][300/725]	Loss:0.00181	Lr:0.000000	Data:0073ms	Train:0034ms	Mem:1.32Gb	Prec@1:0.7662
[10][600/725]	Loss:0.24485	Lr:0.000000	Data:0032ms	Train:0108ms	Mem:1.32Gb	Prec@1:0.7598
Train Prec@1:0.6955	Val Prec@1:0.7684	Epoch Time:3.24min
BestV Prec@1:0.7684	Best Epoch:10
[11][0/750]	Loss:1.01563	Lr:0.001000	Data:1290ms	Train:0125ms	Mem:1.32Gb	Prec@1:0.7500
[11][300/750]	Loss:0.84391	Lr:0.001000	Data:0009ms	Train:0138ms	Mem:1.32Gb	Prec@1:0.7151
[11][600/750]	Loss:1.22654	Lr:0.001000	Data:0021ms	Train:0097ms	Mem:1.32Gb	Prec@1:0.7140
[11][0/725]	Loss:1.31432	Lr:0.000000	Data:1394ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[11][300/725]	Loss:0.02738	Lr:0.000000	Data:0005ms	Train:0219ms	Mem:1.32Gb	Prec@1:0.7558
[11][600/725]	Loss:0.47139	Lr:0.000000	Data:0042ms	Train:0111ms	Mem:1.32Gb	Prec@1:0.7558
Train Prec@1:0.7145	Val Prec@1:0.7696	Epoch Time:3.27min
BestV Prec@1:0.7696	Best Epoch:11
[12][0/750]	Loss:0.81273	Lr:0.001000	Data:1559ms	Train:0091ms	Mem:1.32Gb	Prec@1:0.7500
[12][300/750]	Loss:1.23638	Lr:0.001000	Data:0010ms	Train:0100ms	Mem:1.32Gb	Prec@1:0.7421
[12][600/750]	Loss:1.29028	Lr:0.001000	Data:0010ms	Train:0095ms	Mem:1.32Gb	Prec@1:0.7390
[12][0/725]	Loss:1.82415	Lr:0.000000	Data:1318ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.7500
[12][300/725]	Loss:0.00243	Lr:0.000000	Data:0039ms	Train:0142ms	Mem:1.32Gb	Prec@1:0.7728
[12][600/725]	Loss:0.38493	Lr:0.000000	Data:0040ms	Train:0107ms	Mem:1.32Gb	Prec@1:0.7646
Train Prec@1:0.7372	Val Prec@1:0.7706	Epoch Time:3.25min
BestV Prec@1:0.7706	Best Epoch:12
[13][0/750]	Loss:0.87286	Lr:0.001000	Data:1592ms	Train:0146ms	Mem:1.32Gb	Prec@1:0.8750
[13][300/750]	Loss:0.56685	Lr:0.001000	Data:0011ms	Train:0125ms	Mem:1.32Gb	Prec@1:0.7450
[13][600/750]	Loss:0.77330	Lr:0.001000	Data:0020ms	Train:0104ms	Mem:1.32Gb	Prec@1:0.7307
[13][0/725]	Loss:1.28047	Lr:0.000000	Data:1256ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.7500
[13][300/725]	Loss:0.00163	Lr:0.000000	Data:0059ms	Train:0093ms	Mem:1.32Gb	Prec@1:0.7463
[13][600/725]	Loss:0.36963	Lr:0.000000	Data:0062ms	Train:0023ms	Mem:1.32Gb	Prec@1:0.7469
Train Prec@1:0.7286	Val Prec@1:0.7601	Epoch Time:3.26min
BestV Prec@1:0.7706	Best Epoch:12
[14][0/750]	Loss:0.59196	Lr:0.001000	Data:1357ms	Train:0124ms	Mem:1.32Gb	Prec@1:0.7500
[14][300/750]	Loss:0.72457	Lr:0.001000	Data:0009ms	Train:0149ms	Mem:1.32Gb	Prec@1:0.7409
[14][600/750]	Loss:1.36718	Lr:0.001000	Data:0023ms	Train:0088ms	Mem:1.32Gb	Prec@1:0.7338
[14][0/725]	Loss:1.31750	Lr:0.000000	Data:1448ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[14][300/725]	Loss:0.00923	Lr:0.000000	Data:0043ms	Train:0028ms	Mem:1.32Gb	Prec@1:0.7616
[14][600/725]	Loss:0.21080	Lr:0.000000	Data:0053ms	Train:0032ms	Mem:1.32Gb	Prec@1:0.7573
Train Prec@1:0.7311	Val Prec@1:0.7708	Epoch Time:3.26min
BestV Prec@1:0.7708	Best Epoch:14
[15][0/750]	Loss:0.13314	Lr:0.001000	Data:1262ms	Train:0136ms	Mem:1.32Gb	Prec@1:1.0000
[15][300/750]	Loss:0.65701	Lr:0.001000	Data:0012ms	Train:0172ms	Mem:1.32Gb	Prec@1:0.7650
[15][600/750]	Loss:1.19278	Lr:0.001000	Data:0017ms	Train:0160ms	Mem:1.32Gb	Prec@1:0.7621
[15][0/725]	Loss:1.34067	Lr:0.000000	Data:1312ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[15][300/725]	Loss:0.00218	Lr:0.000000	Data:0010ms	Train:0124ms	Mem:1.32Gb	Prec@1:0.7645
[15][600/725]	Loss:0.86375	Lr:0.000000	Data:0027ms	Train:0120ms	Mem:1.32Gb	Prec@1:0.7673
Train Prec@1:0.7601	Val Prec@1:0.7803	Epoch Time:3.28min
BestV Prec@1:0.7803	Best Epoch:15
[16][0/750]	Loss:0.93458	Lr:0.001000	Data:1273ms	Train:0111ms	Mem:1.32Gb	Prec@1:0.7500
[16][300/750]	Loss:0.49333	Lr:0.001000	Data:0008ms	Train:0161ms	Mem:1.32Gb	Prec@1:0.7770
[16][600/750]	Loss:0.71006	Lr:0.001000	Data:0005ms	Train:0140ms	Mem:1.32Gb	Prec@1:0.7650
[16][0/725]	Loss:1.17224	Lr:0.000000	Data:1454ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.7500
[16][300/725]	Loss:0.00256	Lr:0.000000	Data:0029ms	Train:0087ms	Mem:1.32Gb	Prec@1:0.7454
[16][600/725]	Loss:0.21993	Lr:0.000000	Data:0043ms	Train:0048ms	Mem:1.32Gb	Prec@1:0.7604
Train Prec@1:0.7621	Val Prec@1:0.7734	Epoch Time:3.23min
BestV Prec@1:0.7803	Best Epoch:15
[17][0/750]	Loss:0.80928	Lr:0.001000	Data:1482ms	Train:0144ms	Mem:1.32Gb	Prec@1:0.7500
[17][300/750]	Loss:0.71286	Lr:0.001000	Data:0002ms	Train:0122ms	Mem:1.32Gb	Prec@1:0.7811
[17][600/750]	Loss:1.51287	Lr:0.001000	Data:0006ms	Train:0161ms	Mem:1.32Gb	Prec@1:0.7610
[17][0/725]	Loss:1.53122	Lr:0.000000	Data:1467ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[17][300/725]	Loss:0.00152	Lr:0.000000	Data:0044ms	Train:0057ms	Mem:1.32Gb	Prec@1:0.7521
[17][600/725]	Loss:0.86854	Lr:0.000000	Data:0010ms	Train:0055ms	Mem:1.32Gb	Prec@1:0.7575
Train Prec@1:0.7624	Val Prec@1:0.7736	Epoch Time:3.26min
BestV Prec@1:0.7803	Best Epoch:15
[18][0/750]	Loss:1.39056	Lr:0.001000	Data:1244ms	Train:0159ms	Mem:1.32Gb	Prec@1:0.7500
[18][300/750]	Loss:0.92659	Lr:0.001000	Data:0019ms	Train:0162ms	Mem:1.32Gb	Prec@1:0.7774
[18][600/750]	Loss:0.20439	Lr:0.001000	Data:0030ms	Train:0124ms	Mem:1.32Gb	Prec@1:0.7764
[18][0/725]	Loss:1.34969	Lr:0.000000	Data:1514ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.7500
[18][300/725]	Loss:0.00204	Lr:0.000000	Data:0032ms	Train:0121ms	Mem:1.32Gb	Prec@1:0.7699
[18][600/725]	Loss:0.73630	Lr:0.000000	Data:0031ms	Train:0132ms	Mem:1.32Gb	Prec@1:0.7679
Train Prec@1:0.7766	Val Prec@1:0.7794	Epoch Time:3.26min
BestV Prec@1:0.7803	Best Epoch:15
[19][0/750]	Loss:0.29435	Lr:0.001000	Data:1369ms	Train:0183ms	Mem:1.32Gb	Prec@1:0.8750
[19][300/750]	Loss:1.09391	Lr:0.001000	Data:0001ms	Train:0166ms	Mem:1.32Gb	Prec@1:0.7957
[19][600/750]	Loss:0.30389	Lr:0.001000	Data:0017ms	Train:0102ms	Mem:1.32Gb	Prec@1:0.7841
[19][0/725]	Loss:0.68815	Lr:0.000000	Data:1514ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.8750
[19][300/725]	Loss:0.00497	Lr:0.000000	Data:0059ms	Train:0008ms	Mem:1.32Gb	Prec@1:0.7766
[19][600/725]	Loss:0.09254	Lr:0.000000	Data:0074ms	Train:0175ms	Mem:1.32Gb	Prec@1:0.7789
Train Prec@1:0.7804	Val Prec@1:0.7862	Epoch Time:3.29min
BestV Prec@1:0.7862	Best Epoch:19
[20][0/750]	Loss:0.58808	Lr:0.001000	Data:1293ms	Train:0143ms	Mem:1.32Gb	Prec@1:0.8750
[20][300/750]	Loss:1.50874	Lr:0.001000	Data:0017ms	Train:0102ms	Mem:1.32Gb	Prec@1:0.7679
[20][600/750]	Loss:1.42889	Lr:0.001000	Data:0010ms	Train:0086ms	Mem:1.32Gb	Prec@1:0.7795
[20][0/725]	Loss:1.96272	Lr:0.000000	Data:1379ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.5000
[20][300/725]	Loss:0.00201	Lr:0.000000	Data:0084ms	Train:0046ms	Mem:1.32Gb	Prec@1:0.7591
[20][600/725]	Loss:0.77243	Lr:0.000000	Data:0047ms	Train:0035ms	Mem:1.32Gb	Prec@1:0.7646
Train Prec@1:0.7806	Val Prec@1:0.7768	Epoch Time:3.28min
BestV Prec@1:0.7862	Best Epoch:19
[21][0/750]	Loss:0.54923	Lr:0.001000	Data:1422ms	Train:0113ms	Mem:1.32Gb	Prec@1:0.6250
[21][300/750]	Loss:0.54648	Lr:0.001000	Data:0004ms	Train:0110ms	Mem:1.32Gb	Prec@1:0.8081
[21][600/750]	Loss:1.14421	Lr:0.001000	Data:0058ms	Train:0111ms	Mem:1.32Gb	Prec@1:0.8024
[21][0/725]	Loss:1.64762	Lr:0.000000	Data:1391ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[21][300/725]	Loss:0.00015	Lr:0.000000	Data:0051ms	Train:0081ms	Mem:1.32Gb	Prec@1:0.7542
[21][600/725]	Loss:0.94897	Lr:0.000000	Data:0025ms	Train:0112ms	Mem:1.32Gb	Prec@1:0.7648
Train Prec@1:0.8000	Val Prec@1:0.7751	Epoch Time:3.26min
BestV Prec@1:0.7862	Best Epoch:19
[22][0/750]	Loss:0.51399	Lr:0.001000	Data:1246ms	Train:0144ms	Mem:1.32Gb	Prec@1:0.8750
[22][300/750]	Loss:0.82655	Lr:0.001000	Data:0053ms	Train:0113ms	Mem:1.32Gb	Prec@1:0.8069
[22][600/750]	Loss:0.75000	Lr:0.001000	Data:0026ms	Train:0107ms	Mem:1.32Gb	Prec@1:0.8059
[22][0/725]	Loss:2.38892	Lr:0.000000	Data:1273ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.5000
[22][300/725]	Loss:0.03892	Lr:0.000000	Data:0028ms	Train:0039ms	Mem:1.32Gb	Prec@1:0.7674
[22][600/725]	Loss:0.25823	Lr:0.000000	Data:0023ms	Train:0023ms	Mem:1.32Gb	Prec@1:0.7702
Train Prec@1:0.8013	Val Prec@1:0.7798	Epoch Time:3.27min
BestV Prec@1:0.7862	Best Epoch:19
[23][0/750]	Loss:1.28554	Lr:0.001000	Data:1391ms	Train:0152ms	Mem:1.32Gb	Prec@1:0.6250
[23][300/750]	Loss:1.19700	Lr:0.001000	Data:0003ms	Train:0148ms	Mem:1.32Gb	Prec@1:0.8090
[23][600/750]	Loss:0.79818	Lr:0.001000	Data:0004ms	Train:0086ms	Mem:1.32Gb	Prec@1:0.8093
[23][0/725]	Loss:2.29205	Lr:0.000000	Data:1544ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[23][300/725]	Loss:0.03683	Lr:0.000000	Data:0053ms	Train:0056ms	Mem:1.32Gb	Prec@1:0.7641
[23][600/725]	Loss:0.20947	Lr:0.000000	Data:0030ms	Train:0137ms	Mem:1.32Gb	Prec@1:0.7627
Train Prec@1:0.8081	Val Prec@1:0.7760	Epoch Time:3.27min
BestV Prec@1:0.7862	Best Epoch:19
[24][0/750]	Loss:1.01026	Lr:0.001000	Data:1516ms	Train:0100ms	Mem:1.32Gb	Prec@1:0.6250
[24][300/750]	Loss:0.66731	Lr:0.001000	Data:0028ms	Train:0132ms	Mem:1.32Gb	Prec@1:0.8102
[24][600/750]	Loss:0.70470	Lr:0.001000	Data:0009ms	Train:0128ms	Mem:1.32Gb	Prec@1:0.8074
[24][0/725]	Loss:1.86233	Lr:0.000000	Data:1424ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.7500
[24][300/725]	Loss:0.01649	Lr:0.000000	Data:0029ms	Train:0119ms	Mem:1.32Gb	Prec@1:0.7724
[24][600/725]	Loss:0.51772	Lr:0.000000	Data:0028ms	Train:0101ms	Mem:1.32Gb	Prec@1:0.7671
Train Prec@1:0.8053	Val Prec@1:0.7806	Epoch Time:3.28min
BestV Prec@1:0.7862	Best Epoch:19
[25][0/750]	Loss:0.51215	Lr:0.001000	Data:1569ms	Train:0158ms	Mem:1.32Gb	Prec@1:0.8750
[25][300/750]	Loss:1.53260	Lr:0.001000	Data:0007ms	Train:0144ms	Mem:1.32Gb	Prec@1:0.8310
[25][600/750]	Loss:0.66605	Lr:0.001000	Data:0013ms	Train:0098ms	Mem:1.32Gb	Prec@1:0.8176
[25][0/725]	Loss:2.45614	Lr:0.000000	Data:1476ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[25][300/725]	Loss:0.02713	Lr:0.000000	Data:0061ms	Train:0081ms	Mem:1.32Gb	Prec@1:0.7720
[25][600/725]	Loss:0.51035	Lr:0.000000	Data:0073ms	Train:0036ms	Mem:1.32Gb	Prec@1:0.7712
Train Prec@1:0.8145	Val Prec@1:0.7818	Epoch Time:3.28min
BestV Prec@1:0.7862	Best Epoch:19
[26][0/750]	Loss:0.56285	Lr:0.000100	Data:1592ms	Train:0148ms	Mem:1.32Gb	Prec@1:0.7500
[26][300/750]	Loss:0.16259	Lr:0.000100	Data:0002ms	Train:0183ms	Mem:1.32Gb	Prec@1:0.8248
[26][600/750]	Loss:0.49582	Lr:0.000100	Data:0016ms	Train:0120ms	Mem:1.32Gb	Prec@1:0.8340
[26][0/725]	Loss:2.19540	Lr:0.000000	Data:1534ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[26][300/725]	Loss:0.00209	Lr:0.000000	Data:0033ms	Train:0021ms	Mem:1.32Gb	Prec@1:0.7944
[26][600/725]	Loss:0.60039	Lr:0.000000	Data:0039ms	Train:0056ms	Mem:1.32Gb	Prec@1:0.7989
Train Prec@1:0.8410	Val Prec@1:0.8146	Epoch Time:3.25min
BestV Prec@1:0.8146	Best Epoch:26
[27][0/750]	Loss:0.08077	Lr:0.000100	Data:1505ms	Train:0132ms	Mem:1.32Gb	Prec@1:1.0000
[27][300/750]	Loss:0.05646	Lr:0.000100	Data:0009ms	Train:0174ms	Mem:1.32Gb	Prec@1:0.8634
[27][600/750]	Loss:0.08950	Lr:0.000100	Data:0003ms	Train:0087ms	Mem:1.32Gb	Prec@1:0.8582
[27][0/725]	Loss:1.85706	Lr:0.000000	Data:1502ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[27][300/725]	Loss:0.00430	Lr:0.000000	Data:0023ms	Train:0085ms	Mem:1.32Gb	Prec@1:0.7965
[27][600/725]	Loss:0.67756	Lr:0.000000	Data:0048ms	Train:0082ms	Mem:1.32Gb	Prec@1:0.8053
Train Prec@1:0.8565	Val Prec@1:0.8190	Epoch Time:3.26min
BestV Prec@1:0.8190	Best Epoch:27
[28][0/750]	Loss:0.09878	Lr:0.000100	Data:1374ms	Train:0128ms	Mem:1.32Gb	Prec@1:1.0000
[28][300/750]	Loss:0.16423	Lr:0.000100	Data:0004ms	Train:0094ms	Mem:1.32Gb	Prec@1:0.8775
[28][600/750]	Loss:0.84716	Lr:0.000100	Data:0011ms	Train:0159ms	Mem:1.32Gb	Prec@1:0.8690
[28][0/725]	Loss:1.82014	Lr:0.000000	Data:1434ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.7500
[28][300/725]	Loss:0.00366	Lr:0.000000	Data:0019ms	Train:0097ms	Mem:1.32Gb	Prec@1:0.7965
[28][600/725]	Loss:0.55793	Lr:0.000000	Data:0025ms	Train:0013ms	Mem:1.32Gb	Prec@1:0.8024
Train Prec@1:0.8724	Val Prec@1:0.8157	Epoch Time:3.26min
BestV Prec@1:0.8190	Best Epoch:27
[29][0/750]	Loss:0.62771	Lr:0.000100	Data:1521ms	Train:0132ms	Mem:1.32Gb	Prec@1:0.8750
[29][300/750]	Loss:0.59433	Lr:0.000100	Data:0013ms	Train:0107ms	Mem:1.32Gb	Prec@1:0.8704
[29][600/750]	Loss:0.28783	Lr:0.000100	Data:0009ms	Train:0116ms	Mem:1.32Gb	Prec@1:0.8719
[29][0/725]	Loss:1.87354	Lr:0.000000	Data:1346ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[29][300/725]	Loss:0.00262	Lr:0.000000	Data:0036ms	Train:0035ms	Mem:1.32Gb	Prec@1:0.7961
[29][600/725]	Loss:0.51334	Lr:0.000000	Data:0051ms	Train:0147ms	Mem:1.32Gb	Prec@1:0.8057
Train Prec@1:0.8745	Val Prec@1:0.8193	Epoch Time:3.25min
BestV Prec@1:0.8193	Best Epoch:29
[30][0/750]	Loss:0.23115	Lr:0.000100	Data:1451ms	Train:0144ms	Mem:1.32Gb	Prec@1:1.0000
[30][300/750]	Loss:0.35471	Lr:0.000100	Data:0012ms	Train:0116ms	Mem:1.32Gb	Prec@1:0.8692
[30][600/750]	Loss:0.22763	Lr:0.000100	Data:0015ms	Train:0175ms	Mem:1.32Gb	Prec@1:0.8715
[30][0/725]	Loss:1.73605	Lr:0.000000	Data:1486ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[30][300/725]	Loss:0.00764	Lr:0.000000	Data:0048ms	Train:0089ms	Mem:1.32Gb	Prec@1:0.7998
[30][600/725]	Loss:0.49423	Lr:0.000000	Data:0038ms	Train:0051ms	Mem:1.32Gb	Prec@1:0.8089
Train Prec@1:0.8734	Val Prec@1:0.8202	Epoch Time:3.28min
BestV Prec@1:0.8202	Best Epoch:30
[31][0/750]	Loss:0.13507	Lr:0.000100	Data:1348ms	Train:0128ms	Mem:1.32Gb	Prec@1:1.0000
[31][300/750]	Loss:0.02262	Lr:0.000100	Data:0030ms	Train:0147ms	Mem:1.32Gb	Prec@1:0.8671
[31][600/750]	Loss:0.51082	Lr:0.000100	Data:0007ms	Train:0237ms	Mem:1.32Gb	Prec@1:0.8748
[31][0/725]	Loss:1.82304	Lr:0.000000	Data:1186ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[31][300/725]	Loss:0.00737	Lr:0.000000	Data:0052ms	Train:0032ms	Mem:1.32Gb	Prec@1:0.8011
[31][600/725]	Loss:0.54242	Lr:0.000000	Data:0062ms	Train:0027ms	Mem:1.32Gb	Prec@1:0.8095
Train Prec@1:0.8742	Val Prec@1:0.8208	Epoch Time:3.26min
BestV Prec@1:0.8208	Best Epoch:31
[32][0/750]	Loss:1.17513	Lr:0.000100	Data:1539ms	Train:0131ms	Mem:1.32Gb	Prec@1:0.7500
[32][300/750]	Loss:0.13312	Lr:0.000100	Data:0030ms	Train:0138ms	Mem:1.32Gb	Prec@1:0.8850
[32][600/750]	Loss:0.07209	Lr:0.000100	Data:0013ms	Train:0126ms	Mem:1.32Gb	Prec@1:0.8833
[32][0/725]	Loss:1.64600	Lr:0.000000	Data:1446ms	Train:0010ms	Mem:1.32Gb	Prec@1:0.6250
[32][300/725]	Loss:0.00297	Lr:0.000000	Data:0030ms	Train:0052ms	Mem:1.32Gb	Prec@1:0.8102
[32][600/725]	Loss:0.65355	Lr:0.000000	Data:0023ms	Train:0042ms	Mem:1.32Gb	Prec@1:0.8120
Train Prec@1:0.8854	Val Prec@1:0.8248	Epoch Time:3.28min
BestV Prec@1:0.8248	Best Epoch:32
[33][0/750]	Loss:0.34006	Lr:0.000100	Data:1264ms	Train:0167ms	Mem:1.32Gb	Prec@1:0.8750
[33][300/750]	Loss:0.90419	Lr:0.000100	Data:0022ms	Train:0086ms	Mem:1.32Gb	Prec@1:0.8825
[33][600/750]	Loss:1.31615	Lr:0.000100	Data:0005ms	Train:0166ms	Mem:1.32Gb	Prec@1:0.8802
[33][0/725]	Loss:1.72927	Lr:0.000000	Data:1383ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[33][300/725]	Loss:0.00383	Lr:0.000000	Data:0051ms	Train:0096ms	Mem:1.32Gb	Prec@1:0.8098
[33][600/725]	Loss:0.54258	Lr:0.000000	Data:0054ms	Train:0052ms	Mem:1.32Gb	Prec@1:0.8155
Train Prec@1:0.8827	Val Prec@1:0.8269	Epoch Time:3.23min
BestV Prec@1:0.8269	Best Epoch:33
[34][0/750]	Loss:0.67693	Lr:0.000100	Data:1221ms	Train:0120ms	Mem:1.32Gb	Prec@1:0.8750
[34][300/750]	Loss:1.54718	Lr:0.000100	Data:0009ms	Train:0157ms	Mem:1.32Gb	Prec@1:0.8829
[34][600/750]	Loss:0.20944	Lr:0.000100	Data:0014ms	Train:0134ms	Mem:1.32Gb	Prec@1:0.8812
[34][0/725]	Loss:1.71760	Lr:0.000000	Data:1346ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[34][300/725]	Loss:0.00400	Lr:0.000000	Data:0065ms	Train:0111ms	Mem:1.32Gb	Prec@1:0.8069
[34][600/725]	Loss:0.72504	Lr:0.000000	Data:0052ms	Train:0143ms	Mem:1.32Gb	Prec@1:0.8109
Train Prec@1:0.8807	Val Prec@1:0.8226	Epoch Time:3.29min
BestV Prec@1:0.8269	Best Epoch:33
[35][0/750]	Loss:0.30316	Lr:0.000100	Data:1201ms	Train:0136ms	Mem:1.32Gb	Prec@1:1.0000
[35][300/750]	Loss:0.08436	Lr:0.000100	Data:0010ms	Train:0146ms	Mem:1.32Gb	Prec@1:0.8920
[35][600/750]	Loss:0.32408	Lr:0.000100	Data:0009ms	Train:0230ms	Mem:1.32Gb	Prec@1:0.8898
[35][0/725]	Loss:1.57822	Lr:0.000000	Data:1247ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[35][300/725]	Loss:0.00304	Lr:0.000000	Data:0012ms	Train:0033ms	Mem:1.32Gb	Prec@1:0.8069
[35][600/725]	Loss:0.54237	Lr:0.000000	Data:0028ms	Train:0103ms	Mem:1.32Gb	Prec@1:0.8134
Train Prec@1:0.8852	Val Prec@1:0.8267	Epoch Time:3.28min
BestV Prec@1:0.8269	Best Epoch:33
[36][0/750]	Loss:0.44896	Lr:0.000010	Data:1599ms	Train:0151ms	Mem:1.32Gb	Prec@1:0.8750
[36][300/750]	Loss:0.18466	Lr:0.000010	Data:0043ms	Train:0166ms	Mem:1.32Gb	Prec@1:0.8854
[36][600/750]	Loss:0.20194	Lr:0.000010	Data:0017ms	Train:0117ms	Mem:1.32Gb	Prec@1:0.8767
[36][0/725]	Loss:1.70909	Lr:0.000000	Data:1465ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[36][300/725]	Loss:0.00323	Lr:0.000000	Data:0028ms	Train:0049ms	Mem:1.32Gb	Prec@1:0.8036
[36][600/725]	Loss:0.52660	Lr:0.000000	Data:0039ms	Train:0041ms	Mem:1.32Gb	Prec@1:0.8130
Train Prec@1:0.8790	Val Prec@1:0.8252	Epoch Time:3.25min
BestV Prec@1:0.8269	Best Epoch:33
[37][0/750]	Loss:0.58381	Lr:0.000010	Data:1474ms	Train:0116ms	Mem:1.32Gb	Prec@1:0.8750
[37][300/750]	Loss:0.56318	Lr:0.000010	Data:0005ms	Train:0158ms	Mem:1.32Gb	Prec@1:0.8970
[37][600/750]	Loss:0.03792	Lr:0.000010	Data:0009ms	Train:0171ms	Mem:1.32Gb	Prec@1:0.8869
[37][0/725]	Loss:1.88324	Lr:0.000000	Data:1299ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[37][300/725]	Loss:0.00369	Lr:0.000000	Data:0027ms	Train:0036ms	Mem:1.32Gb	Prec@1:0.8056
[37][600/725]	Loss:0.37184	Lr:0.000000	Data:0017ms	Train:0098ms	Mem:1.32Gb	Prec@1:0.8145
Train Prec@1:0.8882	Val Prec@1:0.8272	Epoch Time:3.28min
BestV Prec@1:0.8272	Best Epoch:37
[38][0/750]	Loss:0.11481	Lr:0.000010	Data:1467ms	Train:0107ms	Mem:1.32Gb	Prec@1:1.0000
[38][300/750]	Loss:0.51915	Lr:0.000010	Data:0013ms	Train:0125ms	Mem:1.32Gb	Prec@1:0.8916
[38][600/750]	Loss:0.19563	Lr:0.000010	Data:0012ms	Train:0119ms	Mem:1.32Gb	Prec@1:0.8898
[38][0/725]	Loss:1.68424	Lr:0.000000	Data:1449ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[38][300/725]	Loss:0.02050	Lr:0.000000	Data:0056ms	Train:0070ms	Mem:1.32Gb	Prec@1:0.8061
[38][600/725]	Loss:0.62432	Lr:0.000000	Data:0064ms	Train:0018ms	Mem:1.32Gb	Prec@1:0.8141
Train Prec@1:0.8914	Val Prec@1:0.8272	Epoch Time:3.25min
BestV Prec@1:0.8272	Best Epoch:37
[39][0/750]	Loss:0.22591	Lr:0.000010	Data:1397ms	Train:0128ms	Mem:1.32Gb	Prec@1:0.8750
[39][300/750]	Loss:0.04057	Lr:0.000010	Data:0015ms	Train:0152ms	Mem:1.32Gb	Prec@1:0.8879
[39][600/750]	Loss:1.04647	Lr:0.000010	Data:0021ms	Train:0088ms	Mem:1.32Gb	Prec@1:0.8925
[39][0/725]	Loss:1.84000	Lr:0.000000	Data:1349ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.6250
[39][300/725]	Loss:0.00526	Lr:0.000000	Data:0044ms	Train:0009ms	Mem:1.32Gb	Prec@1:0.8123
[39][600/725]	Loss:0.39785	Lr:0.000000	Data:0074ms	Train:0187ms	Mem:1.32Gb	Prec@1:0.8155
Train Prec@1:0.8931	Val Prec@1:0.8272	Epoch Time:3.26min
BestV Prec@1:0.8272	Best Epoch:37
CONFIGDIR=/home/liuhaiyang/.config/matplotlib
(private) matplotlib data path: /home/liuhaiyang/.conda/envs/ptnew/lib/python3.7/site-packages/matplotlib/mpl-data
matplotlib data path: /home/liuhaiyang/.conda/envs/ptnew/lib/python3.7/site-packages/matplotlib/mpl-data
loaded rc file /home/liuhaiyang/.conda/envs/ptnew/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
matplotlib version 3.2.1
interactive is False
platform is linux
loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', '_collections_abc', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', '_bootlocale', '_locale', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'google', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'numpy', '__future__', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'mkl', 'ctypes', '_ctypes', 'struct', '_struct', 'ctypes._endian', 'mkl._mklinit', 'mkl._py_mkl_service', 'cython_runtime', 'six', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'datetime', 'time', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'fnmatch', 'ntpath', 'errno', 'urllib', 'urllib.parse', 'pickle', '_compat_pickle', '_pickle', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'collections.abc', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'subprocess', 'signal', '_posixsubprocess', 'select', 'selectors', 'threading', 'traceback', 'linecache', 'tokenize', 'token', '_weakrefset', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'ast', '_ast', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'weakref', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'numpy.lib._iotools', 'numpy.lib.financial', 'decimal', '_decimal', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_14', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'cv2', 'cv2.Error', 'cv2.aruco', 'cv2.bgsegm', 'cv2.bioinspired', 'cv2.cuda', 'cv2.datasets', 'cv2.detail', 'cv2.dnn', 'cv2.face', 'cv2.fisheye', 'cv2.flann', 'cv2.freetype', 'cv2.ft', 'cv2.hdf', 'cv2.hfs', 'cv2.img_hash', 'cv2.instr', 'cv2.ipp', 'cv2.line_descriptor', 'cv2.linemod', 'cv2.ml', 'cv2.motempl', 'cv2.multicalib', 'cv2.ocl', 'cv2.ogl', 'cv2.omnidir', 'cv2.optflow', 'cv2.plot', 'cv2.ppf_match_3d', 'cv2.reg', 'cv2.rgbd', 'cv2.saliency', 'cv2.structured_light', 'cv2.text', 'cv2.videostab', 'cv2.xfeatures2d', 'cv2.ximgproc', 'cv2.ximgproc.segmentation', 'cv2.xphoto', 'torch', 'torch._utils', 'torch._utils_internal', 'inspect', 'dis', 'opcode', '_opcode', 'torch.version', 'torch._six', 'queue', '_queue', 'torch._C._onnx', 'torch._C._jit_tree_views', 'torch._C.cpp', 'torch._C.cpp.nn', 'torch._C._cudart', 'torch._C._nvtx', 'torch._C._cudnn', 'torch._C', 'torch.random', 'torch.serialization', 'difflib', 'tarfile', 'copy', 'tempfile', 'torch._tensor_str', 'torch.tensor', 'torch._namedtensor_internals', 'torch.utils', 'torch.utils.throughput_benchmark', 'torch.utils.hooks', 'torch.storage', 'torch.cuda', 'torch.cuda._utils', 'torch.cuda.memory', 'torch.cuda.random', 'torch.cuda.sparse', 'torch.cuda.profiler', 'torch.cuda.nvtx', 'torch.cuda.streams', 'torch.cuda.amp', 'torch.cuda.amp.grad_scaler', 'torch.sparse', 'torch.functional', 'torch.nn', 'torch.nn.modules', 'torch.nn.modules.module', 'torch.nn.parameter', 'torch.nn.modules.linear', 'torch.nn.functional', 'torch.nn._reduction', 'torch.nn.modules.utils', 'torch.nn.grad', 'torch._VF', 'torch._jit_internal', 'typing', 'typing.io', 'typing.re', 'torch._overrides', 'torch.nn.init', 'torch.nn.modules.conv', 'torch.nn.modules.activation', 'torch.nn.modules.loss', 'torch.nn.modules.container', 'torch.nn.modules.pooling', 'torch.nn.modules.batchnorm', 'torch.nn.modules._functions', 'torch.autograd', 'torch.autograd.variable', 'torch.autograd.function', 'torch.autograd.gradcheck', 'torch.testing', 'torch.autograd.grad_mode', 'torch.autograd.anomaly_mode', 'torch.autograd.profiler', 'torch.autograd.functional', 'torch.nn.modules.instancenorm', 'torch.nn.modules.normalization', 'torch.nn.modules.dropout', 'torch.nn.modules.padding', 'torch.nn.modules.sparse', 'torch.nn.modules.rnn', 'torch.nn.utils', 'torch.nn.utils.rnn', 'torch.nn.utils.clip_grad', 'torch.nn.utils.weight_norm', 'torch.nn.utils.convert_parameters', 'torch.nn.utils.spectral_norm', 'torch.nn.utils.fusion', 'torch.nn.utils.memory_format', 'torch.nn.modules.pixelshuffle', 'torch.nn.modules.upsampling', 'torch.nn.modules.distance', 'torch.nn.modules.fold', 'torch.nn.modules.adaptive', 'torch.nn.modules.transformer', 'torch.nn.modules.flatten', 'torch.nn.parallel', 'torch.nn.parallel.parallel_apply', 'torch.nn.parallel.replicate', 'torch.cuda.comm', 'torch.cuda.nccl', 'torch.nn.parallel.data_parallel', 'torch.nn.parallel.scatter_gather', 'torch.nn.parallel._functions', 'torch.nn.parallel.distributed', 'torch.distributed', 'torch.distributed.distributed_c10d', 'torch.distributed.constants', 'torch.distributed.rendezvous', 'torch._lowrank', 'torch._linalg_utils', 'torch.nn.intrinsic', 'torch.nn.intrinsic.modules', 'torch.nn.intrinsic.modules.fused', 'torch.nn.quantized', 'torch.nn.quantized.modules', 'torch.nn.quantized.modules.activation', 'torch.nn.quantized.functional', 'torch.nn.quantized.modules.batchnorm', 'torch.nn.quantized.modules.conv', 'torch.nn.intrinsic.qat', 'torch.nn.intrinsic.qat.modules', 'torch.nn.intrinsic.qat.modules.linear_relu', 'torch.nn.qat', 'torch.nn.qat.modules', 'torch.nn.qat.modules.linear', 'torch.nn.qat.modules.conv', 'torch.nn.intrinsic.qat.modules.conv_fused', 'torch._ops', 'torch.jit', 'torch.jit.annotations', 'torch.jit._recursive', 'torch.jit.frontend', 'string', '_string', 'torch.jit._builtins', 'torch.backends', 'torch.backends.cudnn', 'torch.distributed.autograd', 'torch.nn.quantized.modules.utils', 'torch.nn.quantized.modules.linear', 'torch.nn.quantized.modules.functional_modules', 'torch.optim', 'torch.optim.adadelta', 'torch.optim.optimizer', 'torch.optim.adagrad', 'torch.optim.adam', 'torch.optim.adamw', 'torch.optim.sparse_adam', 'torch.optim.adamax', 'torch.optim.asgd', 'torch.optim.sgd', 'torch.optim.rprop', 'torch.optim.rmsprop', 'torch.optim.lbfgs', 'torch.optim.lr_scheduler', 'torch.multiprocessing', 'torch.multiprocessing.reductions', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.util', 'atexit', 'multiprocessing.resource_sharer', 'torch.multiprocessing.spawn', 'multiprocessing.connection', '_multiprocessing', 'torch.utils.backcompat', 'torch.onnx', 'torch.hub', 'zipfile', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'locale', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', '_ssl', 'urllib.error', 'urllib.response', 'torch.distributions', 'torch.distributions.bernoulli', 'torch.distributions.constraints', 'torch.distributions.exp_family', 'torch.distributions.distribution', 'torch.distributions.utils', 'torch.distributions.beta', 'torch.distributions.dirichlet', 'torch.distributions.binomial', 'torch.distributions.categorical', 'torch.distributions.cauchy', 'torch.distributions.chi2', 'torch.distributions.gamma', 'torch.distributions.constraint_registry', 'torch.distributions.transforms', 'torch.distributions.continuous_bernoulli', 'torch.distributions.exponential', 'torch.distributions.fishersnedecor', 'torch.distributions.geometric', 'torch.distributions.gumbel', 'torch.distributions.uniform', 'torch.distributions.transformed_distribution', 'torch.distributions.half_cauchy', 'torch.distributions.half_normal', 'torch.distributions.normal', 'torch.distributions.independent', 'torch.distributions.kl', 'torch.distributions.laplace', 'torch.distributions.lowrank_multivariate_normal', 'torch.distributions.multivariate_normal', 'torch.distributions.one_hot_categorical', 'torch.distributions.pareto', 'torch.distributions.poisson', 'torch.distributions.log_normal', 'torch.distributions.logistic_normal', 'torch.distributions.mixture_same_family', 'torch.distributions.multinomial', 'torch.distributions.negative_binomial', 'torch.distributions.relaxed_bernoulli', 'torch.distributions.relaxed_categorical', 'torch.distributions.studentT', 'torch.distributions.von_mises', 'torch.distributed.rpc', 'torch.distributed.rpc.api', 'logging', 'torch.distributed.rpc.backend_registry', 'torch.distributed.rpc.constants', 'torch.distributed.rpc.internal', 'torch.distributions.weibull', 'torch.backends.cuda', 'torch.backends.mkl', 'torch.backends.mkldnn', 'torch.backends.openmp', 'torch.backends.quantized', 'torch.quantization', 'torch.quantization.quantize', 'torch.quantization.default_mappings', 'torch.nn.intrinsic.quantized', 'torch.nn.intrinsic.quantized.modules', 'torch.nn.intrinsic.quantized.modules.linear_relu', 'torch.nn.intrinsic.quantized.modules.conv_relu', 'torch.nn.quantized.dynamic', 'torch.nn.quantized.dynamic.modules', 'torch.nn.quantized.dynamic.modules.linear', 'torch.nn.quantized.dynamic.modules.rnn', 'torch.quantization.stubs', 'torch.quantization.qconfig', 'torch.quantization.observer', 'torch.quantization.fake_quantize', 'torch.quantization.fuse_modules', 'torch.utils.data', 'torch.utils.data.sampler', 'torch.utils.data.distributed', 'torch.utils.data.dataset', 'torch.utils.data.dataloader', 'torch.utils.data._utils', 'torch.utils.data._utils.worker', 'torch.utils.data._utils.signal_handling', 'torch.utils.data._utils.pin_memory', 'torch.utils.data._utils.collate', 'torch.utils.data._utils.fetch', 'torch.__config__', 'torch.__future__', 'torch._torch_docs', 'torch._tensor_docs', 'torch._storage_docs', 'torch._classes', 'torch.quasirandom', 'torch.multiprocessing._atfork', 'torch._lobpcg', 'tensorboardX', 'tensorboardX.record_writer', 'tensorboardX.crc32c', 'tensorboardX.torchvis', 'gc', 'tensorboardX.writer', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'tensorboardX.embedding', 'tensorboardX.event_file_writer', 'tensorboardX.proto', 'tensorboardX.proto.event_pb2', 'google.protobuf', 'pkg_resources', 'pkgutil', 'plistlib', 'xml', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.py31compat', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'sysconfig', 'google.protobuf.descriptor', 'google.protobuf.internal', 'google.protobuf.internal.api_implementation', 'google.protobuf.internal._api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.containers', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.reflection', 'google.protobuf.message_factory', 'google.protobuf.descriptor_pool', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.pyext.cpp_message', 'google.protobuf.symbol_database', 'tensorboardX.proto.summary_pb2', 'tensorboardX.proto.tensor_pb2', 'tensorboardX.proto.resource_handle_pb2', 'google.protobuf.internal.well_known_types', 'tensorboardX.proto.tensor_shape_pb2', 'tensorboardX.proto.types_pb2', 'tensorboardX.onnx_graph', 'tensorboardX.proto.graph_pb2', 'tensorboardX.proto.node_def_pb2', 'tensorboardX.proto.attr_value_pb2', 'tensorboardX.proto.versions_pb2', 'tensorboardX.openvino_graph', 'tensorboardX.pytorch_graph', 'tensorboardX.proto.step_stats_pb2', 'tensorboardX.proto_graph', 'tensorboardX.utils', 'tensorboardX.summary', 'six.moves', 'tensorboardX.proto.plugin_pr_curve_pb2', 'tensorboardX.proto.plugin_text_pb2', 'tensorboardX.proto.plugin_mesh_pb2', 'tensorboardX.proto.layout_pb2', 'tensorboardX.x2num', 'tensorboardX.visdom_writer', 'easydict', 'torchvision', 'torchvision.models', 'torchvision.models.alexnet', 'torchvision.models.utils', 'torchvision.models.resnet', 'torchvision.models.vgg', 'torchvision.models.squeezenet', 'torchvision.models.inception', 'torchvision.models.densenet', 'torch.utils.checkpoint', 'torchvision.models.googlenet', 'torchvision.models.mobilenet', 'torchvision.models.mnasnet', 'torchvision.models.shufflenetv2', 'torchvision.models.segmentation', 'torchvision.models.segmentation.segmentation', 'torchvision.models._utils', 'torchvision.models.segmentation.deeplabv3', 'torchvision.models.segmentation._utils', 'torchvision.models.segmentation.fcn', 'torchvision.models.detection', 'torchvision.models.detection.faster_rcnn', 'torchvision.ops', 'torchvision.ops.boxes', 'torchvision.ops.new_empty_tensor', 'torchvision.ops.deform_conv', 'torchvision.ops.roi_align', 'torchvision.ops._utils', 'torchvision.ops.roi_pool', 'torchvision.ops.ps_roi_align', 'torchvision.ops.ps_roi_pool', 'torchvision.ops.poolers', 'torchvision.ops.feature_pyramid_network', 'torchvision.ops._register_onnx_ops', 'torch.onnx.symbolic_helper', 'torch.onnx.utils', 'torch.onnx.symbolic_opset9', 'torch.onnx.symbolic_registry', 'torch.onnx.symbolic_opset7', 'torch.onnx.symbolic_opset8', 'torch.onnx.symbolic_opset10', 'torch.onnx.symbolic_opset11', 'torch.onnx.symbolic_opset12', 'torchvision.ops.misc', 'torchvision.models.detection.generalized_rcnn', 'torchvision.models.detection.rpn', 'torchvision.models.detection._utils', 'torchvision.models.detection.image_list', 'torchvision.models.detection.roi_heads', 'torchvision.models.detection.transform', 'torchvision.models.detection.backbone_utils', 'torchvision.models.detection.mask_rcnn', 'torchvision.models.detection.keypoint_rcnn', 'torchvision.models.video', 'torchvision.models.video.resnet', 'torchvision.models.quantization', 'torchvision.models.quantization.mobilenet', 'torchvision.models.quantization.utils', 'torchvision.models.quantization.resnet', 'torchvision.models.quantization.googlenet', 'torchvision.models.quantization.inception', 'torchvision.models.quantization.shufflenetv2', 'torchvision.datasets', 'torchvision.datasets.lsun', 'torchvision.datasets.vision', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'torchvision.datasets.utils', 'gzip', 'torch.utils.model_zoo', 'torchvision.datasets.folder', 'torchvision.datasets.coco', 'torchvision.datasets.cifar', 'torchvision.datasets.stl10', 'torchvision.datasets.mnist', 'torchvision.datasets.svhn', 'torchvision.datasets.phototour', 'torchvision.datasets.fakedata', 'torchvision.transforms', 'torchvision.transforms.transforms', 'torchvision.transforms.functional', 'PIL.ImageOps', 'PIL.ImageEnhance', 'PIL.ImageFilter', 'PIL.ImageStat', 'torchvision.datasets.semeion', 'torchvision.datasets.omniglot', 'torchvision.datasets.sbu', 'torchvision.datasets.flickr', 'html', 'html.entities', 'html.parser', '_markupbase', 'glob', 'torchvision.datasets.voc', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'torchvision.datasets.cityscapes', 'torchvision.datasets.imagenet', 'torchvision.datasets.caltech', 'torchvision.datasets.celeba', 'torchvision.datasets.sbd', 'torchvision.datasets.usps', 'torchvision.datasets.kinetics', 'torchvision.datasets.video_utils', 'fractions', 'torchvision.io', 'torchvision.io._video_opt', 'torchvision.io.video', 'torchvision.datasets.hmdb51', 'torchvision.datasets.ucf101', 'torchvision.utils', 'torchvision.extension', 'torchvision.version', 'network_factory', 'backbone', 'backbone.ResNet2015', 'backbone.RegNet2020', 'backbone.effnet', 'opt_factory', 'loss_factory', 'datasets', 'datasets.loader_factory', 'datasets.cifar', 'datasets.cub200_2011', 'test', 'config', 'utils', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'config_cub', 'ptflops', 'ptflops.flops_counter', 'multiprocessing.queues', 'multiprocessing.synchronize', 'multiprocessing.popen_fork', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib.cbook', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver']
CACHEDIR=/home/liuhaiyang/.cache/matplotlib
Using fontManager instance from /home/liuhaiyang/.cache/matplotlib/fontlist-v310.json
Loaded backend qt5agg version unknown.
Loaded backend tkagg version unknown.
Loaded backend agg version unknown.
Loaded backend agg version unknown.
findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Padauk' (Padauk-bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXGeneral' (STIXGeneral-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjoBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIX' (STIX-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
findfont: score(<Font 'Padauk Book' (Padauk-book.ttf) normal normal book normal>) = 10.05
findfont: score(<Font 'STIXGeneral' (STIXGeneral-BoldItalic.otf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
findfont: score(<Font 'NanumGothic' (NanumGothicBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Padauk Book' (Padauk-bookbold.ttf) normal normal book normal>) = 10.05
findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIX' (STIX-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal regular normal>) = 10.05
findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'TakaoPGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'STIX' (STIX-Italic.otf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXVariants' (STIXVariants-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
findfont: score(<Font 'STIXGeneral' (STIXGeneral-Italic.otf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'STIXVariants' (STIXVariants-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Padauk' (Padauk.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothic.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIX Math' (STIXMath-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
findfont: score(<Font 'NanumGothic' (NanumGothic.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjo.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Italic.otf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'STIXSizeFiveSym' (STIXSizeFiveSym-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lohit Punjabi' (Lohit-Punjabi.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'STIXGeneral' (STIXGeneral-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothicBold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-BoldItalic.otf) italic normal bold normal>) = 11.335
findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Bold.otf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
findfont: score(<Font 'STIX' (STIX-BoldItalic.otf) italic normal bold normal>) = 11.335
findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Regular.otf) normal normal regular normal>) = 10.05
findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
findfont: score(<Font 'TakaoPGothic' (TakaoPGothic.ttf) normal normal 400 normal>) = 10.05
findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/liuhaiyang/.conda/envs/ptnew/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
